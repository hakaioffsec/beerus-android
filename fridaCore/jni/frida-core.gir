<?xml version="1.0"?>
<!-- Frida-1.0.gir generated by valac-0.58 0.58.0-frida, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="FridaGDB" version="1.0"/>
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="Gee" version="0.8"/>
<include name="GLib" version="2.0"/>
<include name="FridaBase" version="1.0"/>
<include name="FridaSuperSU" version="1.0"/>
<include name="Json" version="1.0"/>
<include name="GioUnix" version="2.0"/>
<package name="frida-core"/>
<c:include name="frida-core.h"/>
<namespace name="Frida" version="1.0" c:prefix="Frida" c:identifier-prefixes="Frida" c:symbol-prefixes="frida">
	<enumeration name="GDBTargetArch" c:type="FridaGDBTargetArch" glib:type-name="FridaGDBTargetArch" glib:get-type="frida_gdb_target_arch_get_type">
		<member name="unknown" c:identifier="FRIDA_GDB_TARGET_ARCH_UNKNOWN" value="0"/>
		<member name="ia32" c:identifier="FRIDA_GDB_TARGET_ARCH_IA32" value="1"/>
		<member name="x64" c:identifier="FRIDA_GDB_TARGET_ARCH_X64" value="2"/>
		<member name="arm" c:identifier="FRIDA_GDB_TARGET_ARCH_ARM" value="3"/>
		<member name="arm64" c:identifier="FRIDA_GDB_TARGET_ARCH_ARM64" value="4"/>
		<member name="mips" c:identifier="FRIDA_GDB_TARGET_ARCH_MIPS" value="5"/>
	</enumeration>
	<function name="gdb_target_arch_from_nick" c:identifier="frida_gdb_target_arch_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="gdb_target_arch_to_nick" c:identifier="frida_gdb_target_arch_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
			</instance-parameter>
		</parameters>
	</function>
	<class name="GDBClient" c:type="FridaGDBClient" c:symbol-prefix="client" glib:type-name="FridaGDBClient" glib:get-type="frida_gdb_client_get_type" glib:type-struct="GDBClientClass" parent="GObject.Object">
		<implements name="Gio.AsyncInitable"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPrivate" c:type="FridaGDBClientPrivate*"/>
		</field>
		<constant name="NOTIFICATION_TYPE_EXIT_STATUS" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_EXIT_STATUS" value="W">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_EXIT_SIGNAL" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_EXIT_SIGNAL" value="X">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_STOP" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_STOP" value="S">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_STOP_WITH_PROPERTIES" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_STOP_WITH_PROPERTIES" value="T">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<constant name="NOTIFICATION_TYPE_OUTPUT" c:identifier="FRIDA_GDB_CLIENT_NOTIFICATION_TYPE_OUTPUT" value="O">
			<type name="gint8" c:type="gchar"/>
		</constant>
		<field name="supported_features" writable="1">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</field>
		<field name="registers" writable="1" nullable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</type>
		</field>
		<field name="register_by_name" writable="1" nullable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</type>
		</field>
		<field name="breakpoints" writable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="guint64" c:type="guint64*"/>
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</type>
		</field>
		<function name="open" c:identifier="frida_gdb_client_open">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="stream" transfer-ownership="none">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="open_finish" c:identifier="frida_gdb_client_open_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="detect_vendor_features" c:identifier="frida_gdb_client_detect_vendor_features">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detect_vendor_features_finish" c:identifier="frida_gdb_client_detect_vendor_features_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="detect_vendor_features" invoker="detect_vendor_features">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="detect_vendor_features_finish" invoker="detect_vendor_features_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enable_extensions" c:identifier="frida_gdb_client_enable_extensions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_extensions_finish" c:identifier="frida_gdb_client_enable_extensions_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enable_extensions" invoker="enable_extensions">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enable_extensions_finish" invoker="enable_extensions_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="close" c:identifier="frida_gdb_client_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_gdb_client_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue" c:identifier="frida_gdb_client_continue">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_finish" c:identifier="frida_gdb_client_continue_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_specific_threads" c:identifier="frida_gdb_client_continue_specific_threads">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="threads" transfer-ownership="none">
					<type name="Gee.Iterable" c:type="GeeIterable*">
						<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_specific_threads_finish" c:identifier="frida_gdb_client_continue_specific_threads_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_until_exception" c:identifier="frida_gdb_client_continue_until_exception">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="continue_until_exception_finish" c:identifier="frida_gdb_client_continue_until_exception_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_gdb_client_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_gdb_client_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach" c:identifier="frida_gdb_client_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_gdb_client_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="restart" c:identifier="frida_gdb_client_restart" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="kill" c:identifier="frida_gdb_client_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_gdb_client_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_step_thread" c:identifier="_frida_gdb_client_step_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_step_thread_finish" c:identifier="_frida_gdb_client_step_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_step_thread_and_continue" c:identifier="_frida_gdb_client_step_thread_and_continue" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_byte_array" c:identifier="frida_gdb_client_read_byte_array">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_byte_array_finish" c:identifier="frida_gdb_client_read_byte_array_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="read_byte_array" invoker="read_byte_array">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="read_byte_array_finish" invoker="read_byte_array_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="write_byte_array" c:identifier="frida_gdb_client_write_byte_array">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_byte_array_finish" c:identifier="frida_gdb_client_write_byte_array_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_pointer" c:identifier="frida_gdb_client_read_pointer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_pointer_finish" c:identifier="frida_gdb_client_read_pointer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_pointer" c:identifier="frida_gdb_client_write_pointer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_pointer_finish" c:identifier="frida_gdb_client_write_pointer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_bool" c:identifier="frida_gdb_client_read_bool">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_bool_finish" c:identifier="frida_gdb_client_read_bool_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_bool" c:identifier="frida_gdb_client_write_bool">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_bool_finish" c:identifier="frida_gdb_client_write_bool_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="make_buffer_builder" c:identifier="frida_gdb_client_make_buffer_builder">
			<return-value transfer-ownership="full">
				<type name="FridaBase.BufferBuilder" c:type="FridaBufferBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="make_buffer" c:identifier="frida_gdb_client_make_buffer">
			<return-value transfer-ownership="full">
				<type name="FridaBase.Buffer" c:type="FridaBuffer*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_buffer" c:identifier="frida_gdb_client_read_buffer">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_buffer_finish" c:identifier="frida_gdb_client_read_buffer_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.Buffer" c:type="FridaBuffer*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_breakpoint" c:identifier="frida_gdb_client_add_breakpoint">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="kind" transfer-ownership="none">
					<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
				</parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_breakpoint_finish" c:identifier="frida_gdb_client_add_breakpoint_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_remote_command" c:identifier="frida_gdb_client_run_remote_command">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_remote_command_finish" c:identifier="frida_gdb_client_run_remote_command_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_target_properties" c:identifier="frida_gdb_client_load_target_properties">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_target_properties_finish" c:identifier="frida_gdb_client_load_target_properties_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_stop_info" c:identifier="frida_gdb_client_request_stop_info">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="execute_simple" c:identifier="frida_gdb_client_execute_simple">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_simple_finish" c:identifier="frida_gdb_client_execute_simple_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute" c:identifier="frida_gdb_client_execute">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="command" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="execute_finish" c:identifier="frida_gdb_client_execute_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_simple" c:identifier="frida_gdb_client_query_simple">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_simple_finish" c:identifier="frida_gdb_client_query_simple_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_property" c:identifier="frida_gdb_client_query_property">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_property_finish" c:identifier="frida_gdb_client_query_property_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query" c:identifier="frida_gdb_client_query">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_finish" c:identifier="frida_gdb_client_query_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_with_predicate" c:identifier="frida_gdb_client_query_with_predicate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="request" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="predicate" transfer-ownership="none" nullable="1" closure="2" scope="notified" destroy="3">
					<type name="Frida.FridaGDBClientResponsePredicate" c:type="FridaGDBClientResponsePredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="predicate_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_with_predicate_finish" c:identifier="frida_gdb_client_query_with_predicate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="try_handle_notification" c:identifier="frida_gdb_client_try_handle_notification" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="packet" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_stop" c:identifier="frida_gdb_client_parse_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="signum" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="properties" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="parse_stop_finish" c:identifier="frida_gdb_client_parse_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="exception" direction="out" transfer-ownership="full">
					<type name="FridaGDB.Exception" c:type="FridaGDBException**"/>
				</parameter>
				<parameter name="breakpoint" direction="out" transfer-ownership="full" optional="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="parse_stop" invoker="parse_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="signum" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="properties" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="parse_stop_finish" invoker="parse_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="exception" direction="out" transfer-ownership="full">
					<type name="FridaGDB.Exception" c:type="FridaGDBException**"/>
				</parameter>
				<parameter name="breakpoint" direction="out" transfer-ownership="full" optional="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="make_packet_builder_sized" c:identifier="frida_gdb_client_make_packet_builder_sized">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="capacity" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
			</parameters>
		</method>
		<property name="stream" writable="1" construct-only="1">
			<type name="Gio.IOStream" c:type="GIOStream*"/>
		</property>
		<method name="get_stream" c:identifier="frida_gdb_client_get_stream">
			<return-value transfer-ownership="none">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="arch" writable="1">
			<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
		</property>
		<method name="get_arch" c:identifier="frida_gdb_client_get_arch">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_arch" c:identifier="frida_gdb_client_set_arch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
				</parameter>
			</parameters>
		</method>
		<property name="pointer-size" writable="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pointer_size" c:identifier="frida_gdb_client_get_pointer_size">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pointer_size" c:identifier="frida_gdb_client_set_pointer_size">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="byte-order" writable="1">
			<type name="GLib.ByteOrder" c:type="int"/>
		</property>
		<method name="get_byte_order" c:identifier="frida_gdb_client_get_byte_order">
			<return-value transfer-ownership="none">
				<type name="GLib.ByteOrder" c:type="int"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_byte_order" c:identifier="frida_gdb_client_set_byte_order">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.ByteOrder" c:type="int"/>
				</parameter>
			</parameters>
		</method>
		<property name="state">
			<type name="Frida.FridaGDBClientState" c:type="FridaGDBClientState"/>
		</property>
		<method name="get_state" c:identifier="frida_gdb_client_get_state">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientState" c:type="FridaGDBClientState"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="exception">
			<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
		</property>
		<method name="get_exception" c:identifier="frida_gdb_client_get_exception">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="features">
			<type name="Gee.Set" c:type="GeeSet*">
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_features" c:identifier="frida_gdb_client_get_features">
			<return-value transfer-ownership="none">
				<type name="Gee.Set" c:type="GeeSet*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="closed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="console-output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<callback name="ResponsePredicate" c:type="FridaGDBClientResponsePredicate">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientResponseAction" c:type="FridaGDBClientResponseAction"/>
			</return-value>
			<parameters>
				<parameter name="packet" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="GDBClientClass" c:type="FridaGDBClientClass" glib:is-gtype-struct-for="GDBClient">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="detect_vendor_features">
			<callback name="detect_vendor_features" c:type="detect_vendor_features">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="detect_vendor_features_finish">
			<callback name="detect_vendor_features_finish" c:type="detect_vendor_features_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_extensions">
			<callback name="enable_extensions" c:type="enable_extensions">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_extensions_finish">
			<callback name="enable_extensions_finish" c:type="enable_extensions_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_byte_array">
			<callback name="read_byte_array" c:type="read_byte_array">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="address" transfer-ownership="none">
						<type name="guint64" c:type="guint64"/>
					</parameter>
					<parameter name="size" transfer-ownership="none">
						<type name="gulong" c:type="gsize"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="read_byte_array_finish">
			<callback name="read_byte_array_finish" c:type="read_byte_array_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="parse_stop">
			<callback name="parse_stop" c:type="parse_stop">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="signum" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="properties" transfer-ownership="none">
						<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="parse_stop_finish">
			<callback name="parse_stop_finish" c:type="parse_stop_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="exception" direction="out" transfer-ownership="full">
						<type name="FridaGDB.Exception" c:type="FridaGDBException**"/>
					</parameter>
					<parameter name="breakpoint" direction="out" transfer-ownership="full" optional="1">
						<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GDBClientPrivate" c:type="FridaGDBClientPrivate" disguised="1"/>
	<enumeration name="GDBClientState" c:type="FridaGDBClientState" glib:type-name="FridaGDBClientState" glib:get-type="frida_gdb_client_state_get_type">
		<member name="stopped" c:identifier="FRIDA_GDB_CLIENT_STATE_STOPPED" value="0"/>
		<member name="running" c:identifier="FRIDA_GDB_CLIENT_STATE_RUNNING" value="1"/>
		<member name="stopping" c:identifier="FRIDA_GDB_CLIENT_STATE_STOPPING" value="2"/>
		<member name="closed" c:identifier="FRIDA_GDB_CLIENT_STATE_CLOSED" value="3"/>
	</enumeration>
	<function name="gdb_client_state_to_nick" c:identifier="frida_gdb_client_state_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.FridaGDBClientState" c:type="FridaGDBClientState"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="GDBClientChecksumType" c:type="FridaGDBClientChecksumType" glib:type-name="FridaGDBClientChecksumType" glib:get-type="frida_gdb_client_checksum_type_get_type">
		<member name="proper" c:identifier="FRIDA_GDB_CLIENT_CHECKSUM_TYPE_PROPER" value="0"/>
		<member name="zeroed" c:identifier="FRIDA_GDB_CLIENT_CHECKSUM_TYPE_ZEROED" value="1"/>
	</enumeration>
	<enumeration name="GDBClientResponseAction" c:type="FridaGDBClientResponseAction" glib:type-name="FridaGDBClientResponseAction" glib:get-type="frida_gdb_client_response_action_get_type">
		<member name="complete" c:identifier="FRIDA_GDB_CLIENT_RESPONSE_ACTION_COMPLETE" value="0"/>
		<member name="absorb" c:identifier="FRIDA_GDB_CLIENT_RESPONSE_ACTION_ABSORB" value="1"/>
		<member name="keep_trying" c:identifier="FRIDA_GDB_CLIENT_RESPONSE_ACTION_KEEP_TRYING" value="2"/>
	</enumeration>
	<class name="GDBClientPacket" c:type="FridaGDBClientPacket" c:symbol-prefix="packet" glib:type-name="FridaGDBClientPacket" glib:get-type="frida_gdb_client_packet_get_type" glib:type-struct="GDBClientPacketClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_packet_ref" glib:unref-func="frida_gdb_client_packet_unref" glib:set-value-func="frida_gdb_client_value_set_packet" glib:get-value-func="frida_gdb_client_value_get_packet">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPacketPrivate" c:type="FridaGDBClientPacketPrivate*"/>
		</field>
		<constant name="OVERHEAD" c:identifier="FRIDA_GDB_CLIENT_PACKET_OVERHEAD" value="(NULL)">
			<type name="gint" c:type="gint"/>
		</constant>
		<constructor name="from_bytes" c:identifier="frida_gdb_client_packet_new_from_bytes">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
			<parameters>
				<parameter name="payload_bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="frida_gdb_client_packet_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
			</return-value>
		</constructor>
		<method name="get_payload" c:identifier="frida_gdb_client_packet_get_payload">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_payload_bytes" c:identifier="frida_gdb_client_packet_get_payload_bytes">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacket" c:type="FridaGDBClientPacket*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBClientPacketClass" c:type="FridaGDBClientPacketClass" glib:is-gtype-struct-for="GDBClientPacket">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientPacketPrivate" c:type="FridaGDBClientPacketPrivate" disguised="1"/>
	<class name="GDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder" c:symbol-prefix="packet_builder" glib:type-name="FridaGDBClientPacketBuilder" glib:get-type="frida_gdb_client_packet_builder_get_type" glib:type-struct="GDBClientPacketBuilderClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_packet_builder_ref" glib:unref-func="frida_gdb_client_packet_builder_unref" glib:set-value-func="frida_gdb_client_value_set_packet_builder" glib:get-value-func="frida_gdb_client_value_get_packet_builder">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPacketBuilderPrivate" c:type="FridaGDBClientPacketBuilderPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_client_packet_builder_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<parameter name="capacity" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="checksum_type" transfer-ownership="none">
					<type name="Frida.FridaGDBClientChecksumType" c:type="FridaGDBClientChecksumType"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="reset" c:identifier="frida_gdb_client_packet_builder_reset">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="append" c:identifier="frida_gdb_client_packet_builder_append">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_c" c:identifier="frida_gdb_client_packet_builder_append_c">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="c" transfer-ownership="none">
					<type name="gint8" c:type="gchar"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_escaped" c:identifier="frida_gdb_client_packet_builder_append_escaped">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_c_escaped" c:identifier="frida_gdb_client_packet_builder_append_c_escaped">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="c" transfer-ownership="none">
					<type name="gint8" c:type="gchar"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_address" c:identifier="frida_gdb_client_packet_builder_append_address">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_size" c:identifier="frida_gdb_client_packet_builder_append_size">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_uint" c:identifier="frida_gdb_client_packet_builder_append_uint">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_process_id" c:identifier="frida_gdb_client_packet_builder_append_process_id">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="process_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_register_id" c:identifier="frida_gdb_client_packet_builder_append_register_id">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="register_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_register_value" c:identifier="frida_gdb_client_packet_builder_append_register_value">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
			</parameters>
		</method>
		<method name="append_hexbyte" c:identifier="frida_gdb_client_packet_builder_append_hexbyte">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
				<parameter name="byte" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="build" c:identifier="frida_gdb_client_packet_builder_build">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPacketBuilder" c:type="FridaGDBClientPacketBuilder*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBClientPacketBuilderClass" c:type="FridaGDBClientPacketBuilderClass" glib:is-gtype-struct-for="GDBClientPacketBuilder">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientPacketBuilderPrivate" c:type="FridaGDBClientPacketBuilderPrivate" disguised="1"/>
	<class name="GDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary" c:symbol-prefix="property_dictionary" glib:type-name="FridaGDBClientPropertyDictionary" glib:get-type="frida_gdb_client_property_dictionary_get_type" glib:type-struct="GDBClientPropertyDictionaryClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_property_dictionary_ref" glib:unref-func="frida_gdb_client_property_dictionary_unref" glib:set-value-func="frida_gdb_client_value_set_property_dictionary" glib:get-value-func="frida_gdb_client_value_get_property_dictionary">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientPropertyDictionaryPrivate" c:type="FridaGDBClientPropertyDictionaryPrivate*"/>
		</field>
		<function name="parse" c:identifier="frida_gdb_client_property_dictionary_parse" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
			</return-value>
			<parameters>
				<parameter name="raw_properties" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<method name="foreach" c:identifier="frida_gdb_client_property_dictionary_foreach">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="f" transfer-ownership="none" closure="1" scope="call">
					<type name="Gee.ForallFunc" c:type="GeeForallFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="has" c:identifier="frida_gdb_client_property_dictionary_has">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string" c:identifier="frida_gdb_client_property_dictionary_get_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint" c:identifier="frida_gdb_client_property_dictionary_get_uint" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint64" c:identifier="frida_gdb_client_property_dictionary_get_uint64" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_string_array" c:identifier="frida_gdb_client_property_dictionary_get_string_array" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint_array" c:identifier="frida_gdb_client_property_dictionary_get_uint_array" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="guint" c:type="guint"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_uint64_array" c:identifier="frida_gdb_client_property_dictionary_get_uint64_array" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.ArrayList" c:type="GeeArrayList*">
					<type name="guint64" c:type="guint64*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_gdb_client_property_dictionary_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientPropertyDictionary" c:type="FridaGDBClientPropertyDictionary*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GDBClientPropertyDictionaryClass" c:type="FridaGDBClientPropertyDictionaryClass" glib:is-gtype-struct-for="GDBClientPropertyDictionary">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientPropertyDictionaryPrivate" c:type="FridaGDBClientPropertyDictionaryPrivate" disguised="1"/>
	<class name="GDBClientRegister" c:type="FridaGDBClientRegister" c:symbol-prefix="register" glib:type-name="FridaGDBClientRegister" glib:get-type="frida_gdb_client_register_get_type" glib:type-struct="GDBClientRegisterClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_register_ref" glib:unref-func="frida_gdb_client_register_unref" glib:set-value-func="frida_gdb_client_value_set_register" glib:get-value-func="frida_gdb_client_value_get_register">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientRegisterPrivate" c:type="FridaGDBClientRegisterPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_client_register_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="altname" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="bitsize" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_name" c:identifier="frida_gdb_client_register_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_altname" c:identifier="frida_gdb_client_register_get_altname">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_id" c:identifier="frida_gdb_client_register_get_id">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_bitsize" c:identifier="frida_gdb_client_register_get_bitsize">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBClientRegisterClass" c:type="FridaGDBClientRegisterClass" glib:is-gtype-struct-for="GDBClientRegister">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientRegisterPrivate" c:type="FridaGDBClientRegisterPrivate" disguised="1"/>
	<class name="GDBClientTargetSpec" c:type="FridaGDBClientTargetSpec" c:symbol-prefix="target_spec" glib:type-name="FridaGDBClientTargetSpec" glib:get-type="frida_gdb_client_target_spec_get_type" glib:type-struct="GDBClientTargetSpecClass" glib:fundamental="1" glib:ref-func="frida_gdb_client_target_spec_ref" glib:unref-func="frida_gdb_client_target_spec_unref" glib:set-value-func="frida_gdb_client_value_set_target_spec" glib:get-value-func="frida_gdb_client_value_get_target_spec">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBClientTargetSpecPrivate" c:type="FridaGDBClientTargetSpecPrivate*"/>
		</field>
		<field name="arch" writable="1">
			<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
		</field>
		<field name="registers" writable="1">
			<type name="Gee.List" c:type="GeeList*">
				<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
			</type>
		</field>
		<constructor name="new" c:identifier="frida_gdb_client_target_spec_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FridaGDBClientTargetSpec" c:type="FridaGDBClientTargetSpec*"/>
			</return-value>
			<parameters>
				<parameter name="arch" transfer-ownership="none">
					<type name="FridaGDB.TargetArch" c:type="FridaGDBTargetArch"/>
				</parameter>
				<parameter name="registers" transfer-ownership="none">
					<type name="Gee.List" c:type="GeeList*">
						<type name="Frida.FridaGDBClientRegister" c:type="FridaGDBClientRegister*"/>
					</type>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="GDBClientTargetSpecClass" c:type="FridaGDBClientTargetSpecClass" glib:is-gtype-struct-for="GDBClientTargetSpec">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="GDBClientTargetSpecPrivate" c:type="FridaGDBClientTargetSpecPrivate" disguised="1"/>
	<class name="GDBThread" c:type="FridaGDBThread" c:symbol-prefix="thread" glib:type-name="FridaGDBThread" glib:get-type="frida_gdb_thread_get_type" glib:type-struct="GDBThreadClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBThreadPrivate" c:type="FridaGDBThreadPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_thread_new">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="client" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="step" c:identifier="frida_gdb_thread_step">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="step_finish" c:identifier="frida_gdb_thread_step_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="step_and_continue" c:identifier="frida_gdb_thread_step_and_continue" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="read_registers" c:identifier="frida_gdb_thread_read_registers">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_registers_finish" c:identifier="frida_gdb_thread_read_registers_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_registers" c:identifier="frida_gdb_thread_write_registers">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="regs" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_registers_finish" c:identifier="frida_gdb_thread_write_registers_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_register" c:identifier="frida_gdb_thread_read_register">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="read_register_finish" c:identifier="frida_gdb_thread_read_register_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_register" c:identifier="frida_gdb_thread_write_register">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="val" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="write_register_finish" c:identifier="frida_gdb_thread_write_register_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="frida_gdb_thread_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_gdb_thread_get_name">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="client" writable="1" construct-only="1">
			<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
		</property>
		<method name="get_client" c:identifier="frida_gdb_thread_get_client">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBThreadClass" c:type="FridaGDBThreadClass" glib:is-gtype-struct-for="GDBThread">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDBThreadPrivate" c:type="FridaGDBThreadPrivate" disguised="1"/>
	<class name="GDBException" c:type="FridaGDBException" c:symbol-prefix="exception" glib:type-name="FridaGDBException" glib:get-type="frida_gdb_exception_get_type" glib:type-struct="GDBExceptionClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBExceptionPrivate" c:type="FridaGDBExceptionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_exception_new">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
			</return-value>
			<parameters>
				<parameter name="signum" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="breakpoint" transfer-ownership="none" nullable="1">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</parameter>
				<parameter name="thread" transfer-ownership="none">
					<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="to_string" c:identifier="frida_gdb_exception_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="signum" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_signum" c:identifier="frida_gdb_exception_get_signum">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="breakpoint" writable="1" construct-only="1">
			<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
		</property>
		<method name="get_breakpoint" c:identifier="frida_gdb_exception_get_breakpoint">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="thread" writable="1" construct-only="1">
			<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
		</property>
		<method name="get_thread" c:identifier="frida_gdb_exception_get_thread">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Thread" c:type="FridaGDBThread*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="GDBExceptionClass" c:type="FridaGDBExceptionClass" glib:is-gtype-struct-for="GDBException">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="FridaGDB.Exception" c:type="FridaGDBException*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="GDBExceptionPrivate" c:type="FridaGDBExceptionPrivate" disguised="1"/>
	<class name="GDBBreakpoint" c:type="FridaGDBBreakpoint" c:symbol-prefix="breakpoint" glib:type-name="FridaGDBBreakpoint" glib:get-type="frida_gdb_breakpoint_get_type" glib:type-struct="GDBBreakpointClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="GDBBreakpointPrivate" c:type="FridaGDBBreakpointPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_gdb_breakpoint_new">
			<return-value transfer-ownership="full">
				<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
			</return-value>
			<parameters>
				<parameter name="kind" transfer-ownership="none">
					<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
				</parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="guint64" c:type="guint64"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gulong" c:type="gsize"/>
				</parameter>
				<parameter name="client" transfer-ownership="none">
					<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="enable" c:identifier="frida_gdb_breakpoint_enable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_finish" c:identifier="frida_gdb_breakpoint_enable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable" c:identifier="frida_gdb_breakpoint_disable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_finish" c:identifier="frida_gdb_breakpoint_disable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove" c:identifier="frida_gdb_breakpoint_remove">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_finish" c:identifier="frida_gdb_breakpoint_remove_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="kind" writable="1" construct-only="1">
			<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
		</property>
		<method name="get_kind" c:identifier="frida_gdb_breakpoint_get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="address" writable="1" construct-only="1">
			<type name="guint64" c:type="guint64"/>
		</property>
		<method name="get_address" c:identifier="frida_gdb_breakpoint_get_address">
			<return-value transfer-ownership="none">
				<type name="guint64" c:type="guint64"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="size" writable="1" construct-only="1">
			<type name="gulong" c:type="gsize"/>
		</property>
		<method name="get_size" c:identifier="frida_gdb_breakpoint_get_size">
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="gsize"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="client" writable="1" construct-only="1">
			<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
		</property>
		<method name="get_client" c:identifier="frida_gdb_breakpoint_get_client">
			<return-value transfer-ownership="none">
				<type name="FridaGDB.Client" c:type="FridaGDBClient*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaGDB.Breakpoint" c:type="FridaGDBBreakpoint*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="GDBBreakpointClass" c:type="FridaGDBBreakpointClass" glib:is-gtype-struct-for="GDBBreakpoint">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GDBBreakpointPrivate" c:type="FridaGDBBreakpointPrivate" disguised="1"/>
	<enumeration name="GDBBreakpointKind" c:type="FridaGDBBreakpointKind" glib:type-name="FridaGDBBreakpointKind" glib:get-type="frida_gdb_breakpoint_kind_get_type">
		<member name="soft" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_SOFT" value="0"/>
		<member name="hard" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_HARD" value="1"/>
		<member name="write" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_WRITE" value="2"/>
		<member name="read" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_READ" value="3"/>
		<member name="access" c:identifier="FRIDA_GDB_BREAKPOINT_KIND_ACCESS" value="4"/>
	</enumeration>
	<function name="gdb_breakpoint_kind_from_nick" c:identifier="frida_gdb_breakpoint_kind_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="gdb_breakpoint_kind_to_nick" c:identifier="frida_gdb_breakpoint_kind_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.FridaGDBBreakpointKind" c:type="FridaGDBBreakpointKind"/>
			</instance-parameter>
		</parameters>
	</function>
	<function name="system_get_frontmost_application" c:identifier="frida_system_get_frontmost_application" throws="1">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="options" transfer-ownership="none">
				<type name="FridaBase.FrontmostQueryOptions" c:type="FridaFrontmostQueryOptions*"/>
			</parameter>
			<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
				<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
			</parameter>
		</parameters>
	</function>
	<function name="system_enumerate_applications" c:identifier="frida_system_enumerate_applications">
		<return-value transfer-ownership="full">
			<array length="1" c:type="FridaHostApplicationInfo*">
				<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="options" transfer-ownership="none">
				<type name="FridaBase.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="system_enumerate_processes" c:identifier="frida_system_enumerate_processes">
		<return-value transfer-ownership="full">
			<array length="1" c:type="FridaHostProcessInfo*">
				<type name="FridaBase.HostProcessInfo" c:type="FridaHostProcessInfo"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="options" transfer-ownership="none">
				<type name="FridaBase.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="system_kill" c:identifier="frida_system_kill">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="pid" transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</parameter>
		</parameters>
	</function>
	<class name="SuperSUProcess" c:type="FridaSuperSUProcess" c:symbol-prefix="process" glib:type-name="FridaSuperSUProcess" glib:get-type="frida_super_su_process_get_type" glib:type-struct="SuperSUProcessClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SuperSUProcessPrivate" c:type="FridaSuperSUProcessPrivate*"/>
		</field>
		<method name="detach" c:identifier="frida_super_su_process_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_super_su_process_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait" c:identifier="frida_super_su_process_wait">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait_finish" c:identifier="frida_super_su_process_wait_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="output">
			<type name="Gio.InputStream" c:type="GInputStream*"/>
		</property>
		<method name="get_output" c:identifier="frida_super_su_process_get_output">
			<return-value transfer-ownership="none">
				<type name="Gio.InputStream" c:type="GInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="exit-status">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_exit_status" c:identifier="frida_super_su_process_get_exit_status">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SuperSUProcessClass" c:type="FridaSuperSUProcessClass" glib:is-gtype-struct-for="SuperSUProcess">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SuperSUProcessPrivate" c:type="FridaSuperSUProcessPrivate" disguised="1"/>
	<function name="super_su_spawn" c:identifier="frida_super_su_spawn">
		<return-value transfer-ownership="none">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="working_directory" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="argv" transfer-ownership="none">
				<array length="2" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</parameter>
			<parameter name="argv_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="envp" transfer-ownership="none" nullable="1">
				<array length="4" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</parameter>
			<parameter name="envp_length1" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="capture_output" transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</parameter>
			<parameter name="cancellable" transfer-ownership="none" nullable="1">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="8" scope="async">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="_callback__target" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="super_su_spawn_finish" c:identifier="frida_super_su_spawn_finish" throws="1">
		<return-value transfer-ownership="full">
			<type name="FridaSuperSU.Process" c:type="FridaSuperSUProcess*"/>
		</return-value>
		<parameters>
			<parameter name="_res_" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="Runtime" c:type="FridaRuntime" glib:type-name="FridaRuntime" glib:get-type="frida_runtime_get_type">
		<member name="glib" c:identifier="FRIDA_RUNTIME_GLIB" value="0"/>
		<member name="other" c:identifier="FRIDA_RUNTIME_OTHER" value="1"/>
	</enumeration>
	<function name="runtime_from_nick" c:identifier="frida_runtime_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.Runtime" c:type="FridaRuntime"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="runtime_to_nick" c:identifier="frida_runtime_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.Runtime" c:type="FridaRuntime"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="DeviceType" c:type="FridaDeviceType" glib:type-name="FridaDeviceType" glib:get-type="frida_device_type_get_type">
		<member name="local" c:identifier="FRIDA_DEVICE_TYPE_LOCAL" value="0"/>
		<member name="remote" c:identifier="FRIDA_DEVICE_TYPE_REMOTE" value="1"/>
		<member name="usb" c:identifier="FRIDA_DEVICE_TYPE_USB" value="2"/>
	</enumeration>
	<function name="device_type_from_nick" c:identifier="frida_device_type_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="device_type_to_nick" c:identifier="frida_device_type_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="HostSessionProviderKind" c:type="FridaHostSessionProviderKind" glib:type-name="FridaHostSessionProviderKind" glib:get-type="frida_host_session_provider_kind_get_type">
		<member name="local" c:identifier="FRIDA_HOST_SESSION_PROVIDER_KIND_LOCAL" value="0"/>
		<member name="remote" c:identifier="FRIDA_HOST_SESSION_PROVIDER_KIND_REMOTE" value="1"/>
		<member name="usb" c:identifier="FRIDA_HOST_SESSION_PROVIDER_KIND_USB" value="2"/>
	</enumeration>
	<enumeration name="AgentMode" c:type="FridaAgentMode" glib:type-name="FridaAgentMode" glib:get-type="frida_agent_mode_get_type">
		<member name="instanced" c:identifier="FRIDA_AGENT_MODE_INSTANCED" value="0"/>
		<member name="singleton" c:identifier="FRIDA_AGENT_MODE_SINGLETON" value="1"/>
	</enumeration>
	<enumeration name="SourceMaps" c:type="FridaSourceMaps" glib:type-name="FridaSourceMaps" glib:get-type="frida_source_maps_get_type">
		<member name="included" c:identifier="FRIDA_SOURCE_MAPS_INCLUDED" value="0"/>
		<member name="omitted" c:identifier="FRIDA_SOURCE_MAPS_OMITTED" value="1"/>
	</enumeration>
	<function name="source_maps_from_nick" c:identifier="frida_source_maps_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="source_maps_to_nick" c:identifier="frida_source_maps_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="JsCompression" c:type="FridaJsCompression" glib:type-name="FridaJsCompression" glib:get-type="frida_js_compression_get_type">
		<member name="none" c:identifier="FRIDA_JS_COMPRESSION_NONE" value="0"/>
		<member name="terser" c:identifier="FRIDA_JS_COMPRESSION_TERSER" value="1"/>
	</enumeration>
	<function name="js_compression_from_nick" c:identifier="frida_js_compression_from_nick" throws="1">
		<return-value transfer-ownership="full">
			<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
		</return-value>
		<parameters>
			<parameter name="nick" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="js_compression_to_nick" c:identifier="frida_js_compression_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*"/>
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
			</instance-parameter>
		</parameters>
	</function>
	<class name="DeviceManager" c:type="FridaDeviceManager" c:symbol-prefix="device_manager" glib:type-name="FridaDeviceManager" glib:get-type="frida_device_manager_get_type" glib:type-struct="DeviceManagerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DeviceManagerPrivate" c:type="FridaDeviceManagerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_device_manager_new">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
		</constructor>
		<constructor name="with_nonlocal_backends_only" c:identifier="frida_device_manager_new_with_nonlocal_backends_only">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
		</constructor>
		<constructor name="with_socket_backend_only" c:identifier="frida_device_manager_new_with_socket_backend_only">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
		</constructor>
		<method name="close" c:identifier="frida_device_manager_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_device_manager_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_sync" c:identifier="frida_device_manager_close_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_id" c:identifier="frida_device_manager_get_device_by_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_id_finish" c:identifier="frida_device_manager_get_device_by_id_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_id_sync" c:identifier="frida_device_manager_get_device_by_id_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_type" c:identifier="frida_device_manager_get_device_by_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_type_finish" c:identifier="frida_device_manager_get_device_by_type_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_by_type_sync" c:identifier="frida_device_manager_get_device_by_type_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device" c:identifier="frida_device_manager_get_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_finish" c:identifier="frida_device_manager_get_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_device_sync" c:identifier="frida_device_manager_get_device_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_id" c:identifier="frida_device_manager_find_device_by_id">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_id_finish" c:identifier="frida_device_manager_find_device_by_id_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_id_sync" c:identifier="frida_device_manager_find_device_by_id_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_type" c:identifier="frida_device_manager_find_device_by_type">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_type_finish" c:identifier="frida_device_manager_find_device_by_type_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_by_type_sync" c:identifier="frida_device_manager_find_device_by_type_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device" c:identifier="frida_device_manager_find_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_finish" c:identifier="frida_device_manager_find_device_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_device_sync" c:identifier="frida_device_manager_find_device_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceManagerPredicate" c:type="FridaDeviceManagerPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_devices" c:identifier="frida_device_manager_enumerate_devices">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_devices_finish" c:identifier="frida_device_manager_enumerate_devices_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_devices_sync" c:identifier="frida_device_manager_enumerate_devices_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_remote_device" c:identifier="frida_device_manager_add_remote_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_remote_device_finish" c:identifier="frida_device_manager_add_remote_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_remote_device_sync" c:identifier="frida_device_manager_add_remote_device_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_remote_device" c:identifier="frida_device_manager_remove_remote_device">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_remote_device_finish" c:identifier="frida_device_manager_remove_remote_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_remote_device_sync" c:identifier="frida_device_manager_remove_remote_device_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<callback name="Predicate" c:type="FridaDeviceManagerPredicate">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="DeviceManagerClass" c:type="FridaDeviceManagerClass" glib:is-gtype-struct-for="DeviceManager">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DeviceManagerPrivate" c:type="FridaDeviceManagerPrivate" disguised="1"/>
	<class name="DeviceList" c:type="FridaDeviceList" c:symbol-prefix="device_list" glib:type-name="FridaDeviceList" glib:get-type="frida_device_list_get_type" glib:type-struct="DeviceListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DeviceListPrivate" c:type="FridaDeviceListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_device_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_device_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.DeviceList" c:type="FridaDeviceList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DeviceListClass" c:type="FridaDeviceListClass" glib:is-gtype-struct-for="DeviceList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DeviceListPrivate" c:type="FridaDeviceListPrivate" disguised="1"/>
	<class name="Device" c:type="FridaDevice" c:symbol-prefix="device" glib:type-name="FridaDevice" glib:get-type="frida_device_get_type" glib:type-struct="DeviceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DevicePrivate" c:type="FridaDevicePrivate*"/>
		</field>
		<field name="provider" writable="1">
			<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
		</field>
		<field name="current_host_session" writable="1" nullable="1">
			<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
		</field>
		<method name="is_lost" c:identifier="frida_device_is_lost">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="query_system_parameters" c:identifier="frida_device_query_system_parameters">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_system_parameters_finish" c:identifier="frida_device_query_system_parameters_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="query_system_parameters_sync" c:identifier="frida_device_query_system_parameters_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application" c:identifier="frida_device_get_frontmost_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.FrontmostQueryOptions" c:type="FridaFrontmostQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application_finish" c:identifier="frida_device_get_frontmost_application_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Application" c:type="FridaApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application_sync" c:identifier="frida_device_get_frontmost_application_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Application" c:type="FridaApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.FrontmostQueryOptions" c:type="FridaFrontmostQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications" c:identifier="frida_device_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_device_enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_sync" c:identifier="frida_device_enumerate_applications_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_pid" c:identifier="frida_device_get_process_by_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_pid_finish" c:identifier="frida_device_get_process_by_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_pid_sync" c:identifier="frida_device_get_process_by_pid_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_name" c:identifier="frida_device_get_process_by_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_name_finish" c:identifier="frida_device_get_process_by_name_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_by_name_sync" c:identifier="frida_device_get_process_by_name_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process" c:identifier="frida_device_get_process">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_finish" c:identifier="frida_device_get_process_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_process_sync" c:identifier="frida_device_get_process_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_pid" c:identifier="frida_device_find_process_by_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_pid_finish" c:identifier="frida_device_find_process_by_pid_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_pid_sync" c:identifier="frida_device_find_process_by_pid_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_name" c:identifier="frida_device_find_process_by_name">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_name_finish" c:identifier="frida_device_find_process_by_name_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_by_name_sync" c:identifier="frida_device_find_process_by_name_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process" c:identifier="frida_device_find_process">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_finish" c:identifier="frida_device_find_process_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="find_process_sync" c:identifier="frida_device_find_process_sync" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="predicate" transfer-ownership="none" closure="1" scope="call">
					<type name="Frida.DeviceProcessPredicate" c:type="FridaDeviceProcessPredicate"/>
				</parameter>
				<parameter name="predicate_target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes" c:identifier="frida_device_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_device_enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_sync" c:identifier="frida_device_enumerate_processes_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating" c:identifier="frida_device_enable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating_finish" c:identifier="frida_device_enable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating_sync" c:identifier="frida_device_enable_spawn_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating" c:identifier="frida_device_disable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating_finish" c:identifier="frida_device_disable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating_sync" c:identifier="frida_device_disable_spawn_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn" c:identifier="frida_device_enumerate_pending_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn_finish" c:identifier="frida_device_enumerate_pending_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn_sync" c:identifier="frida_device_enumerate_pending_spawn_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_children" c:identifier="frida_device_enumerate_pending_children">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_children_finish" c:identifier="frida_device_enumerate_pending_children_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ChildList" c:type="FridaChildList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_children_sync" c:identifier="frida_device_enumerate_pending_children_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ChildList" c:type="FridaChildList*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn" c:identifier="frida_device_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn_finish" c:identifier="frida_device_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn_sync" c:identifier="frida_device_spawn_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input" c:identifier="frida_device_input">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input_finish" c:identifier="frida_device_input_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input_sync" c:identifier="frida_device_input_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume" c:identifier="frida_device_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_finish" c:identifier="frida_device_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_sync" c:identifier="frida_device_resume_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill" c:identifier="frida_device_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_device_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_sync" c:identifier="frida_device_kill_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach" c:identifier="frida_device_attach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.SessionOptions" c:type="FridaSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_finish" c:identifier="frida_device_attach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Session" c:type="FridaSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_sync" c:identifier="frida_device_attach_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Session" c:type="FridaSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.SessionOptions" c:type="FridaSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file" c:identifier="frida_device_inject_library_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_finish" c:identifier="frida_device_inject_library_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_sync" c:identifier="frida_device_inject_library_file_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob" c:identifier="frida_device_inject_library_blob">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob_finish" c:identifier="frida_device_inject_library_blob_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob_sync" c:identifier="frida_device_inject_library_blob_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel" c:identifier="frida_device_open_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel_finish" c:identifier="frida_device_open_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel_sync" c:identifier="frida_device_open_channel_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_service" c:identifier="frida_device_open_service">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_service_finish" c:identifier="frida_device_open_service_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Service" c:type="FridaService*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_service_sync" c:identifier="frida_device_open_service_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Service" c:type="FridaService*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair" c:identifier="frida_device_unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_finish" c:identifier="frida_device_unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_sync" c:identifier="frida_device_unpair_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="frida_device_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_device_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon" writable="1" construct-only="1">
			<type name="GLib.Variant" c:type="GVariant*"/>
		</property>
		<method name="get_icon" c:identifier="frida_device_get_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="dtype">
			<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
		</property>
		<method name="get_dtype" c:identifier="frida_device_get_dtype">
			<return-value transfer-ownership="none">
				<type name="Frida.DeviceType" c:type="FridaDeviceType"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="bus">
			<type name="Frida.Bus" c:type="FridaBus*"/>
		</property>
		<method name="get_bus" c:identifier="frida_device_get_bus">
			<return-value transfer-ownership="none">
				<type name="Frida.Bus" c:type="FridaBus*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="spawn-added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="spawn" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="spawn-removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="spawn" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="child-added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="child" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="child-removed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="child" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="process-crashed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="crash" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="fd" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="lost">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<callback name="ProcessPredicate" c:type="FridaDeviceProcessPredicate">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="process" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="DeviceClass" c:type="FridaDeviceClass" glib:is-gtype-struct-for="Device">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DevicePrivate" c:type="FridaDevicePrivate" disguised="1"/>
	<class name="RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions" c:symbol-prefix="remote_device_options" glib:type-name="FridaRemoteDeviceOptions" glib:get-type="frida_remote_device_options_get_type" glib:type-struct="RemoteDeviceOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="RemoteDeviceOptionsPrivate" c:type="FridaRemoteDeviceOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_remote_device_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
			</return-value>
		</constructor>
		<property name="certificate" writable="1">
			<type name="Gio.TlsCertificate" c:type="GTlsCertificate*"/>
		</property>
		<method name="get_certificate" c:identifier="frida_remote_device_options_get_certificate">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Gio.TlsCertificate" c:type="GTlsCertificate*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_certificate" c:identifier="frida_remote_device_options_set_certificate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="Gio.TlsCertificate" c:type="GTlsCertificate*"/>
				</parameter>
			</parameters>
		</method>
		<property name="origin" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_origin" c:identifier="frida_remote_device_options_get_origin">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_origin" c:identifier="frida_remote_device_options_set_origin">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="token" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_token" c:identifier="frida_remote_device_options_get_token">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_token" c:identifier="frida_remote_device_options_set_token">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="keepalive-interval" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_keepalive_interval" c:identifier="frida_remote_device_options_get_keepalive_interval">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_keepalive_interval" c:identifier="frida_remote_device_options_set_keepalive_interval">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.RemoteDeviceOptions" c:type="FridaRemoteDeviceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="RemoteDeviceOptionsClass" c:type="FridaRemoteDeviceOptionsClass" glib:is-gtype-struct-for="RemoteDeviceOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="RemoteDeviceOptionsPrivate" c:type="FridaRemoteDeviceOptionsPrivate" disguised="1"/>
	<class name="ApplicationList" c:type="FridaApplicationList" c:symbol-prefix="application_list" glib:type-name="FridaApplicationList" glib:get-type="frida_application_list_get_type" glib:type-struct="ApplicationListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ApplicationListPrivate" c:type="FridaApplicationListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_application_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_application_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Application" c:type="FridaApplication*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationList" c:type="FridaApplicationList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ApplicationListClass" c:type="FridaApplicationListClass" glib:is-gtype-struct-for="ApplicationList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ApplicationListPrivate" c:type="FridaApplicationListPrivate" disguised="1"/>
	<class name="Application" c:type="FridaApplication" c:symbol-prefix="application" glib:type-name="FridaApplication" glib:get-type="frida_application_get_type" glib:type-struct="ApplicationClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ApplicationPrivate" c:type="FridaApplicationPrivate*"/>
		</field>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_application_get_identifier">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_application_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_application_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parameters" writable="1" construct-only="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_parameters" c:identifier="frida_application_get_parameters">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ApplicationClass" c:type="FridaApplicationClass" glib:is-gtype-struct-for="Application">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ApplicationPrivate" c:type="FridaApplicationPrivate" disguised="1"/>
	<class name="ProcessList" c:type="FridaProcessList" c:symbol-prefix="process_list" glib:type-name="FridaProcessList" glib:get-type="frida_process_list_get_type" glib:type-struct="ProcessListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessListPrivate" c:type="FridaProcessListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_process_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_process_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Process" c:type="FridaProcess*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessList" c:type="FridaProcessList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ProcessListClass" c:type="FridaProcessListClass" glib:is-gtype-struct-for="ProcessList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessListPrivate" c:type="FridaProcessListPrivate" disguised="1"/>
	<class name="Process" c:type="FridaProcess" c:symbol-prefix="process" glib:type-name="FridaProcess" glib:get-type="frida_process_get_type" glib:type-struct="ProcessClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessPrivate" c:type="FridaProcessPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_process_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_process_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parameters" writable="1" construct-only="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_parameters" c:identifier="frida_process_get_parameters">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Process" c:type="FridaProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ProcessClass" c:type="FridaProcessClass" glib:is-gtype-struct-for="Process">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessPrivate" c:type="FridaProcessPrivate" disguised="1"/>
	<class name="ProcessMatchOptions" c:type="FridaProcessMatchOptions" c:symbol-prefix="process_match_options" glib:type-name="FridaProcessMatchOptions" glib:get-type="frida_process_match_options_get_type" glib:type-struct="ProcessMatchOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessMatchOptionsPrivate" c:type="FridaProcessMatchOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_process_match_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
			</return-value>
		</constructor>
		<property name="timeout" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_timeout" c:identifier="frida_process_match_options_get_timeout">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_timeout" c:identifier="frida_process_match_options_set_timeout">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="scope" writable="1">
			<type name="FridaBase.Scope" c:type="FridaScope"/>
		</property>
		<method name="get_scope" c:identifier="frida_process_match_options_get_scope">
			<return-value transfer-ownership="none">
				<type name="FridaBase.Scope" c:type="FridaScope"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_scope" c:identifier="frida_process_match_options_set_scope">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessMatchOptions" c:type="FridaProcessMatchOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaBase.Scope" c:type="FridaScope"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ProcessMatchOptionsClass" c:type="FridaProcessMatchOptionsClass" glib:is-gtype-struct-for="ProcessMatchOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessMatchOptionsPrivate" c:type="FridaProcessMatchOptionsPrivate" disguised="1"/>
	<class name="SpawnOptions" c:type="FridaSpawnOptions" c:symbol-prefix="spawn_options" glib:type-name="FridaSpawnOptions" glib:get-type="frida_spawn_options_get_type" glib:type-struct="SpawnOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SpawnOptionsPrivate" c:type="FridaSpawnOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_spawn_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
			</return-value>
		</constructor>
		<property name="argv" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_argv" c:identifier="frida_spawn_options_get_argv">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_argv" c:identifier="frida_spawn_options_set_argv">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="envp" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_envp" c:identifier="frida_spawn_options_get_envp">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_envp" c:identifier="frida_spawn_options_set_envp">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="env" writable="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_env" c:identifier="frida_spawn_options_get_env">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_env" c:identifier="frida_spawn_options_set_env">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<array length="1" c:type="gchar**">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="value_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="cwd" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_cwd" c:identifier="frida_spawn_options_get_cwd">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_cwd" c:identifier="frida_spawn_options_set_cwd">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="stdio" writable="1">
			<type name="FridaBase.Stdio" c:type="FridaStdio"/>
		</property>
		<method name="get_stdio" c:identifier="frida_spawn_options_get_stdio">
			<return-value transfer-ownership="none">
				<type name="FridaBase.Stdio" c:type="FridaStdio"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_stdio" c:identifier="frida_spawn_options_set_stdio">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="FridaBase.Stdio" c:type="FridaStdio"/>
				</parameter>
			</parameters>
		</method>
		<property name="aux" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_aux" c:identifier="frida_spawn_options_get_aux">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_aux" c:identifier="frida_spawn_options_set_aux">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnOptions" c:type="FridaSpawnOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SpawnOptionsClass" c:type="FridaSpawnOptionsClass" glib:is-gtype-struct-for="SpawnOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SpawnOptionsPrivate" c:type="FridaSpawnOptionsPrivate" disguised="1"/>
	<class name="SpawnList" c:type="FridaSpawnList" c:symbol-prefix="spawn_list" glib:type-name="FridaSpawnList" glib:get-type="frida_spawn_list_get_type" glib:type-struct="SpawnListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SpawnListPrivate" c:type="FridaSpawnListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_spawn_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_spawn_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Spawn" c:type="FridaSpawn*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SpawnList" c:type="FridaSpawnList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="SpawnListClass" c:type="FridaSpawnListClass" glib:is-gtype-struct-for="SpawnList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SpawnListPrivate" c:type="FridaSpawnListPrivate" disguised="1"/>
	<class name="Spawn" c:type="FridaSpawn" c:symbol-prefix="spawn" glib:type-name="FridaSpawn" glib:get-type="frida_spawn_get_type" glib:type-struct="SpawnClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SpawnPrivate" c:type="FridaSpawnPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_spawn_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_spawn_get_identifier">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Spawn" c:type="FridaSpawn*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="SpawnClass" c:type="FridaSpawnClass" glib:is-gtype-struct-for="Spawn">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SpawnPrivate" c:type="FridaSpawnPrivate" disguised="1"/>
	<class name="ChildList" c:type="FridaChildList" c:symbol-prefix="child_list" glib:type-name="FridaChildList" glib:get-type="frida_child_list_get_type" glib:type-struct="ChildListClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ChildListPrivate" c:type="FridaChildListPrivate*"/>
		</field>
		<method name="size" c:identifier="frida_child_list_size">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChildList" c:type="FridaChildList*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get" c:identifier="frida_child_list_get">
			<return-value transfer-ownership="full">
				<type name="Frida.Child" c:type="FridaChild*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ChildList" c:type="FridaChildList*"/>
				</instance-parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ChildListClass" c:type="FridaChildListClass" glib:is-gtype-struct-for="ChildList">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ChildListPrivate" c:type="FridaChildListPrivate" disguised="1"/>
	<class name="Child" c:type="FridaChild" c:symbol-prefix="child" glib:type-name="FridaChild" glib:get-type="frida_child_get_type" glib:type-struct="ChildClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ChildPrivate" c:type="FridaChildPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_child_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parent-pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_parent_pid" c:identifier="frida_child_get_parent_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="origin" writable="1" construct-only="1">
			<type name="FridaBase.ChildOrigin" c:type="FridaChildOrigin"/>
		</property>
		<method name="get_origin" c:identifier="frida_child_get_origin">
			<return-value transfer-ownership="none">
				<type name="FridaBase.ChildOrigin" c:type="FridaChildOrigin"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="identifier" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="frida_child_get_identifier">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="path" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="frida_child_get_path">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="argv" writable="1" construct-only="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_argv" c:identifier="frida_child_get_argv">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<property name="envp" writable="1" construct-only="1">
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*"/>
			</array>
		</property>
		<method name="get_envp" c:identifier="frida_child_get_envp">
			<return-value transfer-ownership="none" nullable="1">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Child" c:type="FridaChild*"/>
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ChildClass" c:type="FridaChildClass" glib:is-gtype-struct-for="Child">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ChildPrivate" c:type="FridaChildPrivate" disguised="1"/>
	<class name="Crash" c:type="FridaCrash" c:symbol-prefix="crash" glib:type-name="FridaCrash" glib:get-type="frida_crash_get_type" glib:type-struct="CrashClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CrashPrivate" c:type="FridaCrashPrivate*"/>
		</field>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_crash_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="process-name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_process_name" c:identifier="frida_crash_get_process_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="summary" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_summary" c:identifier="frida_crash_get_summary">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="report" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_report" c:identifier="frida_crash_get_report">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="parameters" writable="1" construct-only="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</property>
		<method name="get_parameters" c:identifier="frida_crash_get_parameters">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GLib.Variant" c:type="GVariant*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="CrashClass" c:type="FridaCrashClass" glib:is-gtype-struct-for="Crash">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CrashPrivate" c:type="FridaCrashPrivate" disguised="1"/>
	<class name="Bus" c:type="FridaBus" c:symbol-prefix="bus" glib:type-name="FridaBus" glib:get-type="frida_bus_get_type" glib:type-struct="BusClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BusPrivate" c:type="FridaBusPrivate*"/>
		</field>
		<method name="is_detached" c:identifier="frida_bus_is_detached">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="attach" c:identifier="frida_bus_attach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_finish" c:identifier="frida_bus_attach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="attach_sync" c:identifier="frida_bus_attach_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_bus_post">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device" writable="1" construct-only="1">
			<type name="Frida.Device" c:type="FridaDevice*"/>
		</property>
		<method name="get_device" c:identifier="frida_bus_get_device">
			<return-value transfer-ownership="none">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Bus" c:type="FridaBus*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="BusClass" c:type="FridaBusClass" glib:is-gtype-struct-for="Bus">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="BusPrivate" c:type="FridaBusPrivate" disguised="1"/>
	<class name="Session" c:type="FridaSession" c:symbol-prefix="session" glib:type-name="FridaSession" glib:get-type="frida_session_get_type" glib:type-struct="SessionClass" parent="GObject.Object">
		<implements name="FridaBase.AgentMessageSink"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SessionPrivate" c:type="FridaSessionPrivate*"/>
		</field>
		<field name="active_session" writable="1">
			<type name="FridaBase.AgentSession" c:type="FridaAgentSession*"/>
		</field>
		<method name="is_detached" c:identifier="frida_session_is_detached">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="detach" c:identifier="frida_session_detach">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_finish" c:identifier="frida_session_detach_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="detach_sync" c:identifier="frida_session_detach_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume" c:identifier="frida_session_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_finish" c:identifier="frida_session_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="resume_sync" c:identifier="frida_session_resume_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_child_gating" c:identifier="frida_session_enable_child_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_child_gating_finish" c:identifier="frida_session_enable_child_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_child_gating_sync" c:identifier="frida_session_enable_child_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_child_gating" c:identifier="frida_session_disable_child_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_child_gating_finish" c:identifier="frida_session_disable_child_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_child_gating_sync" c:identifier="frida_session_disable_child_gating_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script" c:identifier="frida_session_create_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_finish" c:identifier="frida_session_create_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_sync" c:identifier="frida_session_create_script_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_from_bytes" c:identifier="frida_session_create_script_from_bytes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_from_bytes_finish" c:identifier="frida_session_create_script_from_bytes_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_script_from_bytes_sync" c:identifier="frida_session_create_script_from_bytes_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Script" c:type="FridaScript*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="bytes" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="compile_script" c:identifier="frida_session_compile_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="compile_script_finish" c:identifier="frida_session_compile_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="compile_script_sync" c:identifier="frida_session_compile_script_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.ScriptOptions" c:type="FridaScriptOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="snapshot_script" c:identifier="frida_session_snapshot_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="embed_script" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.SnapshotOptions" c:type="FridaSnapshotOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="snapshot_script_finish" c:identifier="frida_session_snapshot_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="snapshot_script_sync" c:identifier="frida_session_snapshot_script_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="embed_script" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.SnapshotOptions" c:type="FridaSnapshotOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="setup_peer_connection" c:identifier="frida_session_setup_peer_connection">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.PeerOptions" c:type="FridaPeerOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="setup_peer_connection_finish" c:identifier="frida_session_setup_peer_connection_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="setup_peer_connection_sync" c:identifier="frida_session_setup_peer_connection_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.PeerOptions" c:type="FridaPeerOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="join_portal" c:identifier="frida_session_join_portal">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.PortalOptions" c:type="FridaPortalOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="join_portal_finish" c:identifier="frida_session_join_portal_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="join_portal_sync" c:identifier="frida_session_join_portal_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="FridaBase.PortalOptions" c:type="FridaPortalOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="_get_connection" c:identifier="_frida_session_get_connection">
			<return-value transfer-ownership="full">
				<type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="pid" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_pid" c:identifier="frida_session_get_pid">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="persist-timeout" writable="1" construct-only="1">
			<type name="guint" c:type="guint"/>
		</property>
		<method name="get_persist_timeout" c:identifier="frida_session_get_persist_timeout">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Session" c:type="FridaSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="reason" transfer-ownership="none">
					<type name="FridaBase.SessionDetachReason" c:type="FridaSessionDetachReason"/>
				</parameter>
				<parameter name="crash" transfer-ownership="none" nullable="1">
					<type name="Frida.Crash" c:type="FridaCrash*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="SessionClass" c:type="FridaSessionClass" glib:is-gtype-struct-for="Session">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SessionPrivate" c:type="FridaSessionPrivate" disguised="1"/>
	<class name="Script" c:type="FridaScript" c:symbol-prefix="script" glib:type-name="FridaScript" glib:get-type="frida_script_get_type" glib:type-struct="ScriptClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ScriptPrivate" c:type="FridaScriptPrivate*"/>
		</field>
		<method name="is_destroyed" c:identifier="frida_script_is_destroyed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="load" c:identifier="frida_script_load">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_finish" c:identifier="frida_script_load_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_sync" c:identifier="frida_script_load_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unload" c:identifier="frida_script_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unload_finish" c:identifier="frida_script_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unload_sync" c:identifier="frida_script_unload_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="eternalize" c:identifier="frida_script_eternalize">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="eternalize_finish" c:identifier="frida_script_eternalize_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="eternalize_sync" c:identifier="frida_script_eternalize_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_script_post">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_debugger" c:identifier="frida_script_enable_debugger">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint16" c:type="guint16"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_debugger_finish" c:identifier="frida_script_enable_debugger_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_debugger_sync" c:identifier="frida_script_enable_debugger_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint16" c:type="guint16"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_debugger" c:identifier="frida_script_disable_debugger">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_debugger_finish" c:identifier="frida_script_disable_debugger_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_debugger_sync" c:identifier="frida_script_disable_debugger_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Script" c:type="FridaScript*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="destroyed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="ScriptClass" c:type="FridaScriptClass" glib:is-gtype-struct-for="Script">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ScriptPrivate" c:type="FridaScriptPrivate" disguised="1"/>
	<class name="PortalMembership" c:type="FridaPortalMembership" c:symbol-prefix="portal_membership" glib:type-name="FridaPortalMembership" glib:get-type="frida_portal_membership_get_type" glib:type-struct="PortalMembershipClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PortalMembershipPrivate" c:type="FridaPortalMembershipPrivate*"/>
		</field>
		<method name="terminate" c:identifier="frida_portal_membership_terminate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="terminate_finish" c:identifier="frida_portal_membership_terminate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="terminate_sync" c:identifier="frida_portal_membership_terminate_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalMembership" c:type="FridaPortalMembership*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="PortalMembershipClass" c:type="FridaPortalMembershipClass" glib:is-gtype-struct-for="PortalMembership">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="PortalMembershipPrivate" c:type="FridaPortalMembershipPrivate" disguised="1"/>
	<class name="ControlService" c:type="FridaControlService" c:symbol-prefix="control_service" glib:type-name="FridaControlService" glib:get-type="frida_control_service_get_type" glib:type-struct="ControlServiceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ControlServicePrivate" c:type="FridaControlServicePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_control_service_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ControlService" c:type="FridaControlService*"/>
			</return-value>
			<parameters>
				<parameter name="endpoint_params" transfer-ownership="none">
					<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="with_device" c:identifier="frida_control_service_new_with_device" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.ControlService" c:type="FridaControlService*"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="Frida.Device" c:type="FridaDevice*"/>
				</parameter>
				<parameter name="endpoint_params" transfer-ownership="none">
					<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="start" c:identifier="frida_control_service_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_control_service_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_sync" c:identifier="frida_control_service_start_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_control_service_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_control_service_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_sync" c:identifier="frida_control_service_stop_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="endpoint-params" writable="1" construct-only="1">
			<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
		</property>
		<method name="get_endpoint_params" c:identifier="frida_control_service_get_endpoint_params">
			<return-value transfer-ownership="none">
				<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="options" writable="1" construct-only="1">
			<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
		</property>
		<method name="get_options" c:identifier="frida_control_service_get_options">
			<return-value transfer-ownership="none">
				<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlService" c:type="FridaControlService*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="ControlServiceClass" c:type="FridaControlServiceClass" glib:is-gtype-struct-for="ControlService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ControlServicePrivate" c:type="FridaControlServicePrivate" disguised="1"/>
	<class name="ControlServiceOptions" c:type="FridaControlServiceOptions" c:symbol-prefix="control_service_options" glib:type-name="FridaControlServiceOptions" glib:get-type="frida_control_service_options_get_type" glib:type-struct="ControlServiceOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ControlServiceOptionsPrivate" c:type="FridaControlServiceOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_control_service_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
			</return-value>
		</constructor>
		<property name="sysroot" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_sysroot" c:identifier="frida_control_service_options_get_sysroot">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_sysroot" c:identifier="frida_control_service_options_set_sysroot">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="enable-preload" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_enable_preload" c:identifier="frida_control_service_options_get_enable_preload">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_enable_preload" c:identifier="frida_control_service_options_set_enable_preload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="report-crashes" writable="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_report_crashes" c:identifier="frida_control_service_options_get_report_crashes">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_report_crashes" c:identifier="frida_control_service_options_set_report_crashes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ControlServiceOptions" c:type="FridaControlServiceOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="ControlServiceOptionsClass" c:type="FridaControlServiceOptionsClass" glib:is-gtype-struct-for="ControlServiceOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ControlServiceOptionsPrivate" c:type="FridaControlServiceOptionsPrivate" disguised="1"/>
	<class name="PortalService" c:type="FridaPortalService" c:symbol-prefix="portal_service" glib:type-name="FridaPortalService" glib:get-type="frida_portal_service_get_type" glib:type-struct="PortalServiceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="PortalServicePrivate" c:type="FridaPortalServicePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_portal_service_new">
			<return-value transfer-ownership="full">
				<type name="Frida.PortalService" c:type="FridaPortalService*"/>
			</return-value>
			<parameters>
				<parameter name="cluster_params" transfer-ownership="none">
					<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
				<parameter name="control_params" transfer-ownership="none" nullable="1">
					<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="start" c:identifier="frida_portal_service_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_portal_service_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_sync" c:identifier="frida_portal_service_start_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_portal_service_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_portal_service_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_sync" c:identifier="frida_portal_service_stop_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kick" c:identifier="frida_portal_service_kick">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_portal_service_post">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="narrowcast" c:identifier="frida_portal_service_narrowcast">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="broadcast" c:identifier="frida_portal_service_broadcast">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_tags" c:identifier="frida_portal_service_enumerate_tags">
			<return-value transfer-ownership="full" nullable="1">
				<array length="1" c:type="gchar**">
					<type name="utf8" c:type="gchar*"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="tag" c:identifier="frida_portal_service_tag">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="untag" c:identifier="frida_portal_service_untag">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="tag" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="device">
			<type name="Frida.Device" c:type="FridaDevice*"/>
		</property>
		<method name="get_device" c:identifier="frida_portal_service_get_device">
			<return-value transfer-ownership="none">
				<type name="Frida.Device" c:type="FridaDevice*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="cluster-params" writable="1" construct-only="1">
			<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
		</property>
		<method name="get_cluster_params" c:identifier="frida_portal_service_get_cluster_params">
			<return-value transfer-ownership="none">
				<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="control-params" writable="1" construct-only="1">
			<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
		</property>
		<method name="get_control_params" c:identifier="frida_portal_service_get_control_params">
			<return-value transfer-ownership="none" nullable="1">
				<type name="FridaBase.EndpointParameters" c:type="FridaEndpointParameters*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.PortalService" c:type="FridaPortalService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="node-connected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="node-joined">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="node-left">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="application" transfer-ownership="none">
					<type name="Frida.Application" c:type="FridaApplication*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="node-disconnected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="controller-connected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="controller-disconnected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="authenticated">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="session_info" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="subscribe">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="connection_id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="json" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="PortalServiceClass" c:type="FridaPortalServiceClass" glib:is-gtype-struct-for="PortalService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="PortalServicePrivate" c:type="FridaPortalServicePrivate" disguised="1"/>
	<class name="HostSessionService" c:type="FridaHostSessionService" c:symbol-prefix="host_session_service" glib:type-name="FridaHostSessionService" glib:get-type="frida_host_session_service_get_type" glib:type-struct="HostSessionServiceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="HostSessionServicePrivate" c:type="FridaHostSessionServicePrivate*"/>
		</field>
		<constructor name="with_default_backends" c:identifier="frida_host_session_service_new_with_default_backends">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<constructor name="with_local_backend_only" c:identifier="frida_host_session_service_new_with_local_backend_only">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<constructor name="with_nonlocal_backends_only" c:identifier="frida_host_session_service_new_with_nonlocal_backends_only">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<constructor name="with_socket_backend_only" c:identifier="frida_host_session_service_new_with_socket_backend_only">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<method name="start" c:identifier="frida_host_session_service_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_host_session_service_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop" c:identifier="frida_host_session_service_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_host_session_service_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_backend" c:identifier="frida_host_session_service_add_backend">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="backend" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</parameter>
			</parameters>
		</method>
		<method name="remove_backend" c:identifier="frida_host_session_service_remove_backend">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
				</instance-parameter>
				<parameter name="backend" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_host_session_service_new">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionService" c:type="FridaHostSessionService*"/>
			</return-value>
		</constructor>
		<glib:signal name="provider-available">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="provider-unavailable">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="HostSessionServiceClass" c:type="FridaHostSessionServiceClass" glib:is-gtype-struct-for="HostSessionService">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="HostSessionServicePrivate" c:type="FridaHostSessionServicePrivate" disguised="1"/>
	<class name="HostSessionOptions" c:type="FridaHostSessionOptions" c:symbol-prefix="host_session_options" glib:type-name="FridaHostSessionOptions" glib:get-type="frida_host_session_options_get_type" glib:type-struct="HostSessionOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="HostSessionOptionsPrivate" c:type="FridaHostSessionOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_host_session_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
			</return-value>
		</constructor>
		<property name="map" writable="1">
			<type name="Gee.Map" c:type="GeeMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GObject.Value" c:type="GValue*"/>
			</type>
		</property>
		<method name="get_map" c:identifier="frida_host_session_options_get_map">
			<return-value transfer-ownership="none">
				<type name="Gee.Map" c:type="GeeMap*">
					<type name="utf8" c:type="gchar*"/>
					<type name="GObject.Value" c:type="GValue*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_map" c:identifier="frida_host_session_options_set_map">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Gee.Map" c:type="GeeMap*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GObject.Value" c:type="GValue*"/>
					</type>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="HostSessionOptionsClass" c:type="FridaHostSessionOptionsClass" glib:is-gtype-struct-for="HostSessionOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="HostSessionOptionsPrivate" c:type="FridaHostSessionOptionsPrivate" disguised="1"/>
	<class name="BaseDBusHostSession" c:type="FridaBaseDBusHostSession" c:symbol-prefix="base_dbus_host_session" glib:type-name="FridaBaseDBusHostSession" glib:get-type="frida_base_dbus_host_session_get_type" glib:type-struct="BaseDBusHostSessionClass" parent="GObject.Object" abstract="1">
		<implements name="FridaBase.HostSession"/>
		<implements name="FridaBase.AgentController"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BaseDBusHostSessionPrivate" c:type="FridaBaseDBusHostSessionPrivate*"/>
		</field>
		<field name="injector" writable="1">
			<type name="Frida.Injector" c:type="FridaInjector*"/>
		</field>
		<field name="injectee_by_pid" writable="1">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="guint" c:type="guint"/>
				<type name="guint" c:type="guint"/>
			</type>
		</field>
		<field name="io_cancellable" writable="1">
			<type name="Gio.Cancellable" c:type="GCancellable*"/>
		</field>
		<method name="preload" c:identifier="frida_base_dbus_host_session_preload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="preload_finish" c:identifier="frida_base_dbus_host_session_preload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="preload" invoker="preload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="preload_finish" invoker="preload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="close" c:identifier="frida_base_dbus_host_session_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_base_dbus_host_session_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="close" invoker="close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="close_finish" invoker="close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="create_system_session_provider" c:identifier="frida_base_dbus_host_session_create_system_session_provider">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_system_session_provider_finish" c:identifier="frida_base_dbus_host_session_create_system_session_provider_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="connection" direction="out" transfer-ownership="full">
					<type name="Gio.DBusConnection" c:type="GDBusConnection**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create_system_session_provider" invoker="create_system_session_provider">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_system_session_provider_finish" invoker="create_system_session_provider_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="connection" direction="out" transfer-ownership="full">
					<type name="Gio.DBusConnection" c:type="GDBusConnection**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_frontmost_application" c:identifier="frida_base_dbus_host_session_get_frontmost_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_frontmost_application_finish" c:identifier="frida_base_dbus_host_session_get_frontmost_application_finish" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_frontmost_application" invoker="get_frontmost_application">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="get_frontmost_application_finish" invoker="get_frontmost_application_finish" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_applications" c:identifier="frida_base_dbus_host_session_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_base_dbus_host_session_enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostApplicationInfo*">
					<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_applications" invoker="enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_applications_finish" invoker="enumerate_applications_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostApplicationInfo*">
					<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_processes" c:identifier="frida_base_dbus_host_session_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_base_dbus_host_session_enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostProcessInfo*">
					<type name="FridaBase.HostProcessInfo" c:type="FridaHostProcessInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_processes" invoker="enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_processes_finish" invoker="enumerate_processes_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostProcessInfo*">
					<type name="FridaBase.HostProcessInfo" c:type="FridaHostProcessInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enable_spawn_gating" c:identifier="frida_base_dbus_host_session_enable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_spawn_gating_finish" c:identifier="frida_base_dbus_host_session_enable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enable_spawn_gating" invoker="enable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enable_spawn_gating_finish" invoker="enable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="disable_spawn_gating" c:identifier="frida_base_dbus_host_session_disable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_spawn_gating_finish" c:identifier="frida_base_dbus_host_session_disable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="disable_spawn_gating" invoker="disable_spawn_gating">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="disable_spawn_gating_finish" invoker="disable_spawn_gating_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="enumerate_pending_spawn" c:identifier="frida_base_dbus_host_session_enumerate_pending_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_pending_spawn_finish" c:identifier="frida_base_dbus_host_session_enumerate_pending_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostSpawnInfo*">
					<type name="FridaBase.HostSpawnInfo" c:type="FridaHostSpawnInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="enumerate_pending_spawn" invoker="enumerate_pending_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="enumerate_pending_spawn_finish" invoker="enumerate_pending_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostSpawnInfo*">
					<type name="FridaBase.HostSpawnInfo" c:type="FridaHostSpawnInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="spawn" c:identifier="frida_base_dbus_host_session_spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="FridaBase.HostSpawnOptions" c:type="FridaHostSpawnOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="spawn_finish" c:identifier="frida_base_dbus_host_session_spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="spawn" invoker="spawn">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="program" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="FridaBase.HostSpawnOptions" c:type="FridaHostSpawnOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="spawn_finish" invoker="spawn_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="try_handle_child" c:identifier="frida_base_dbus_host_session_try_handle_child">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="info" transfer-ownership="none">
					<type name="FridaBase.HostChildInfo" c:type="FridaHostChildInfo*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="try_handle_child" invoker="try_handle_child">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="info" transfer-ownership="none">
					<type name="FridaBase.HostChildInfo" c:type="FridaHostChildInfo*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="notify_child_resumed" c:identifier="frida_base_dbus_host_session_notify_child_resumed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="notify_child_resumed" invoker="notify_child_resumed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="notify_child_gating_changed" c:identifier="frida_base_dbus_host_session_notify_child_gating_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="subscriber_count" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="notify_child_gating_changed" invoker="notify_child_gating_changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="subscriber_count" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="prepare_exec_transition" c:identifier="frida_base_dbus_host_session_prepare_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="prepare_exec_transition_finish" c:identifier="frida_base_dbus_host_session_prepare_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="prepare_exec_transition" invoker="prepare_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="prepare_exec_transition_finish" invoker="prepare_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="await_exec_transition" c:identifier="frida_base_dbus_host_session_await_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="await_exec_transition_finish" c:identifier="frida_base_dbus_host_session_await_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="await_exec_transition" invoker="await_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="await_exec_transition_finish" invoker="await_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="cancel_exec_transition" c:identifier="frida_base_dbus_host_session_cancel_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="cancel_exec_transition_finish" c:identifier="frida_base_dbus_host_session_cancel_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="cancel_exec_transition" invoker="cancel_exec_transition">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="cancel_exec_transition_finish" invoker="cancel_exec_transition_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="process_is_alive" c:identifier="frida_base_dbus_host_session_process_is_alive">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="process_is_alive" invoker="process_is_alive">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="input" c:identifier="frida_base_dbus_host_session_input">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<array length="2" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="input_finish" c:identifier="frida_base_dbus_host_session_input_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="input" invoker="input">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<array length="2" c:type="guint8*">
						<type name="guint8" c:type="guint8"/>
					</array>
				</parameter>
				<parameter name="data_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="input_finish" invoker="input_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="perform_resume" c:identifier="frida_base_dbus_host_session_perform_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_resume_finish" c:identifier="frida_base_dbus_host_session_perform_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="perform_resume" invoker="perform_resume">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="perform_resume_finish" invoker="perform_resume_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="still_attached_to" c:identifier="frida_base_dbus_host_session_still_attached_to">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill" c:identifier="frida_base_dbus_host_session_kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="kill_finish" c:identifier="frida_base_dbus_host_session_kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="kill" invoker="kill">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="kill_finish" invoker="kill_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="on_uninjected" c:identifier="frida_base_dbus_host_session_on_uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_uninjected" invoker="on_uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="perform_attach_to" c:identifier="frida_base_dbus_host_session_perform_attach_to">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_attach_to_finish" c:identifier="frida_base_dbus_host_session_perform_attach_to_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.Future" c:type="FridaFuture*">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full" optional="1">
					<type name="GObject.Object" c:type="GObject**"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="perform_attach_to" invoker="perform_attach_to">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="perform_attach_to_finish" invoker="perform_attach_to_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.Future" c:type="FridaFuture*">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full" optional="1">
					<type name="GObject.Object" c:type="GObject**"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get_emulated_agent_path" c:identifier="frida_base_dbus_host_session_get_emulated_agent_path" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_emulated_agent_path" invoker="get_emulated_agent_path" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="make_agent_parameters" c:identifier="frida_base_dbus_host_session_make_agent_parameters" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="remote_address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="GLib.Variant" c:type="GVariant*"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session" c:identifier="frida_base_dbus_host_session_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="FridaBase.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_base_dbus_host_session_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unlink_agent_session" c:identifier="frida_base_dbus_host_session_unlink_agent_session">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="can_pass_file_descriptors_to_agent_session" c:identifier="frida_base_dbus_host_session_can_pass_file_descriptors_to_agent_session" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="obtain_session_provider" c:identifier="frida_base_dbus_host_session_obtain_session_provider" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
			</parameters>
		</method>
		<method name="try_collect_crash" c:identifier="frida_base_dbus_host_session_try_collect_crash">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="try_collect_crash_finish" c:identifier="frida_base_dbus_host_session_try_collect_crash_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="FridaBase.CrashInfo" c:type="FridaCrashInfo*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="try_collect_crash" invoker="try_collect_crash">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="try_collect_crash_finish" invoker="try_collect_crash_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="FridaBase.CrashInfo" c:type="FridaCrashInfo*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="BaseDBusHostSessionClass" c:type="FridaBaseDBusHostSessionClass" glib:is-gtype-struct-for="BaseDBusHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="preload">
			<callback name="preload" c:type="preload">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="preload_finish">
			<callback name="preload_finish" c:type="preload_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="close">
			<callback name="close" c:type="close">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="close_finish">
			<callback name="close_finish" c:type="close_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_system_session_provider">
			<callback name="create_system_session_provider" c:type="create_system_session_provider">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_system_session_provider_finish">
			<callback name="create_system_session_provider_finish" c:type="create_system_session_provider_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBase.AgentSessionProvider" c:type="FridaAgentSessionProvider*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="connection" direction="out" transfer-ownership="full">
						<type name="Gio.DBusConnection" c:type="GDBusConnection**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_frontmost_application">
			<callback name="get_frontmost_application" c:type="get_frontmost_application">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_frontmost_application_finish">
			<callback name="get_frontmost_application_finish" c:type="get_frontmost_application_finish" throws="1">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
						<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_applications">
			<callback name="enumerate_applications" c:type="enumerate_applications">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_applications_finish">
			<callback name="enumerate_applications_finish" c:type="enumerate_applications_finish" throws="1">
				<return-value transfer-ownership="full">
					<array length="1" c:type="FridaHostApplicationInfo*">
						<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_processes">
			<callback name="enumerate_processes" c:type="enumerate_processes">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_processes_finish">
			<callback name="enumerate_processes_finish" c:type="enumerate_processes_finish" throws="1">
				<return-value transfer-ownership="full">
					<array length="1" c:type="FridaHostProcessInfo*">
						<type name="FridaBase.HostProcessInfo" c:type="FridaHostProcessInfo"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_spawn_gating">
			<callback name="enable_spawn_gating" c:type="enable_spawn_gating">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enable_spawn_gating_finish">
			<callback name="enable_spawn_gating_finish" c:type="enable_spawn_gating_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disable_spawn_gating">
			<callback name="disable_spawn_gating" c:type="disable_spawn_gating">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="disable_spawn_gating_finish">
			<callback name="disable_spawn_gating_finish" c:type="disable_spawn_gating_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_pending_spawn">
			<callback name="enumerate_pending_spawn" c:type="enumerate_pending_spawn">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="enumerate_pending_spawn_finish">
			<callback name="enumerate_pending_spawn_finish" c:type="enumerate_pending_spawn_finish" throws="1">
				<return-value transfer-ownership="full">
					<array length="1" c:type="FridaHostSpawnInfo*">
						<type name="FridaBase.HostSpawnInfo" c:type="FridaHostSpawnInfo"/>
					</array>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="result_length1" direction="out" transfer-ownership="none">
						<type name="gint" c:type="gint*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="spawn">
			<callback name="spawn" c:type="spawn">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="program" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="FridaBase.HostSpawnOptions" c:type="FridaHostSpawnOptions*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="spawn_finish">
			<callback name="spawn_finish" c:type="spawn_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_handle_child">
			<callback name="try_handle_child" c:type="try_handle_child">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="info" transfer-ownership="none">
						<type name="FridaBase.HostChildInfo" c:type="FridaHostChildInfo*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="notify_child_resumed">
			<callback name="notify_child_resumed" c:type="notify_child_resumed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="notify_child_gating_changed">
			<callback name="notify_child_gating_changed" c:type="notify_child_gating_changed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="subscriber_count" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="prepare_exec_transition">
			<callback name="prepare_exec_transition" c:type="prepare_exec_transition">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="prepare_exec_transition_finish">
			<callback name="prepare_exec_transition_finish" c:type="prepare_exec_transition_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="await_exec_transition">
			<callback name="await_exec_transition" c:type="await_exec_transition">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="await_exec_transition_finish">
			<callback name="await_exec_transition_finish" c:type="await_exec_transition_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="cancel_exec_transition">
			<callback name="cancel_exec_transition" c:type="cancel_exec_transition">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="cancel_exec_transition_finish">
			<callback name="cancel_exec_transition_finish" c:type="cancel_exec_transition_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="process_is_alive">
			<callback name="process_is_alive" c:type="process_is_alive">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="input">
			<callback name="input" c:type="input">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<array length="3" c:type="guint8*">
							<type name="guint8" c:type="guint8"/>
						</array>
					</parameter>
					<parameter name="data_length1" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="input_finish">
			<callback name="input_finish" c:type="input_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_resume">
			<callback name="perform_resume" c:type="perform_resume">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_resume_finish">
			<callback name="perform_resume_finish" c:type="perform_resume_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="kill">
			<callback name="kill" c:type="kill">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="kill_finish">
			<callback name="kill_finish" c:type="kill_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="on_uninjected">
			<callback name="on_uninjected" c:type="on_uninjected">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_attach_to">
			<callback name="perform_attach_to" c:type="perform_attach_to">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="options" transfer-ownership="none">
						<type name="GLib.HashTable" c:type="GHashTable*">
							<type name="utf8" c:type="gchar*"/>
							<type name="GLib.Variant" c:type="GVariant*"/>
						</type>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_attach_to_finish">
			<callback name="perform_attach_to_finish" c:type="perform_attach_to_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBase.Future" c:type="FridaFuture*">
						<type name="Gio.IOStream" c:type="GIOStream*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="transport" direction="out" transfer-ownership="full" optional="1">
						<type name="GObject.Object" c:type="GObject**"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_emulated_agent_path">
			<callback name="get_emulated_agent_path" c:type="get_emulated_agent_path" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_collect_crash">
			<callback name="try_collect_crash" c:type="try_collect_crash">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="try_collect_crash_finish">
			<callback name="try_collect_crash_finish" c:type="try_collect_crash_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="FridaBase.CrashInfo" c:type="FridaCrashInfo*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="BaseDBusHostSessionPrivate" c:type="FridaBaseDBusHostSessionPrivate" disguised="1"/>
	<class name="InternalAgent" c:type="FridaInternalAgent" c:symbol-prefix="internal_agent" glib:type-name="FridaInternalAgent" glib:get-type="frida_internal_agent_get_type" glib:type-struct="InternalAgentClass" parent="GObject.Object" abstract="1">
		<implements name="FridaBase.AgentMessageSink"/>
		<implements name="FridaBase.RpcPeer"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="InternalAgentPrivate" c:type="FridaInternalAgentPrivate*"/>
		</field>
		<field name="attach_options" writable="1">
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GLib.Variant" c:type="GVariant*"/>
			</type>
		</field>
		<field name="target_pid" writable="1">
			<type name="guint" c:type="guint"/>
		</field>
		<field name="session_id" writable="1">
			<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId"/>
		</field>
		<field name="session" writable="1">
			<type name="FridaBase.AgentSession" c:type="FridaAgentSession*"/>
		</field>
		<field name="script" writable="1">
			<type name="FridaBase.AgentScriptId" c:type="FridaAgentScriptId"/>
		</field>
		<method name="close" c:identifier="frida_internal_agent_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_internal_agent_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_target_pid" c:identifier="frida_internal_agent_get_target_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_target_pid_finish" c:identifier="frida_internal_agent_get_target_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get_target_pid" invoker="get_target_pid">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="get_target_pid_finish" invoker="get_target_pid_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_source" c:identifier="frida_internal_agent_load_source">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_source_finish" c:identifier="frida_internal_agent_load_source_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_source" invoker="load_source">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_source_finish" invoker="load_source_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_snapshot" c:identifier="frida_internal_agent_load_snapshot">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_snapshot_finish" c:identifier="frida_internal_agent_load_snapshot_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full">
					<type name="FridaBase.SnapshotTransport" c:type="FridaSnapshotTransport*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_snapshot" invoker="load_snapshot">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_snapshot_finish" invoker="load_snapshot_finish" throws="1">
			<return-value transfer-ownership="full" nullable="1">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="transport" direction="out" transfer-ownership="full">
					<type name="FridaBase.SnapshotTransport" c:type="FridaSnapshotTransport*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="on_event" c:identifier="frida_internal_agent_on_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Json.Array" c:type="JsonArray*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="on_event" invoker="on_event">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="type" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Json.Array" c:type="JsonArray*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="call" c:identifier="frida_internal_agent_call">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="method" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="args" transfer-ownership="none">
					<array length="2" c:type="JsonNode**">
						<type name="Json.Node" c:type="JsonNode*"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="data" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="call_finish" c:identifier="frida_internal_agent_call_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Json.Node" c:type="JsonNode*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post" c:identifier="frida_internal_agent_post">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="Json.Node" c:type="JsonNode*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="post_finish" c:identifier="frida_internal_agent_post_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="ensure_loaded" c:identifier="frida_internal_agent_ensure_loaded">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="ensure_loaded_finish" c:identifier="frida_internal_agent_ensure_loaded_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_unload" c:identifier="frida_internal_agent_perform_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="perform_unload_finish" c:identifier="frida_internal_agent_perform_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="perform_unload" invoker="perform_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="perform_unload_finish" invoker="perform_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="load_script" c:identifier="frida_internal_agent_load_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="load_script_finish" c:identifier="frida_internal_agent_load_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="load_script" invoker="load_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="load_script_finish" invoker="load_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="destroy_script" c:identifier="frida_internal_agent_destroy_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_script_finish" c:identifier="frida_internal_agent_destroy_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="destroy_script" invoker="destroy_script">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="destroy_script_finish" invoker="destroy_script_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="wait_for_unload" c:identifier="frida_internal_agent_wait_for_unload">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="wait_for_unload_finish" c:identifier="frida_internal_agent_wait_for_unload_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<property name="host-session" writable="1" construct-only="1">
			<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
		</property>
		<method name="get_host_session" c:identifier="frida_internal_agent_get_host_session">
			<return-value transfer-ownership="none">
				<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="script-runtime" writable="1" construct-only="1">
			<type name="FridaBase.ScriptRuntime" c:type="FridaScriptRuntime"/>
		</property>
		<method name="get_script_runtime" c:identifier="frida_internal_agent_get_script_runtime">
			<return-value transfer-ownership="none">
				<type name="FridaBase.ScriptRuntime" c:type="FridaScriptRuntime"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="unloaded">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="InternalAgentClass" c:type="FridaInternalAgentClass" glib:is-gtype-struct-for="InternalAgent">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="get_target_pid">
			<callback name="get_target_pid" c:type="get_target_pid">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_target_pid_finish">
			<callback name="get_target_pid_finish" c:type="get_target_pid_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_source">
			<callback name="load_source" c:type="load_source">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_source_finish">
			<callback name="load_source_finish" c:type="load_source_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_snapshot">
			<callback name="load_snapshot" c:type="load_snapshot">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_snapshot_finish">
			<callback name="load_snapshot_finish" c:type="load_snapshot_finish" throws="1">
				<return-value transfer-ownership="full" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
					<parameter name="transport" direction="out" transfer-ownership="full">
						<type name="FridaBase.SnapshotTransport" c:type="FridaSnapshotTransport*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="on_event">
			<callback name="on_event" c:type="on_event">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="type" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="event" transfer-ownership="none">
						<type name="Json.Array" c:type="JsonArray*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_unload">
			<callback name="perform_unload" c:type="perform_unload">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="perform_unload_finish">
			<callback name="perform_unload_finish" c:type="perform_unload_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_script">
			<callback name="load_script" c:type="load_script">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="load_script_finish">
			<callback name="load_script_finish" c:type="load_script_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_script">
			<callback name="destroy_script" c:type="destroy_script">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_script_finish">
			<callback name="destroy_script_finish" c:type="destroy_script_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.InternalAgent" c:type="FridaInternalAgent*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="InternalAgentPrivate" c:type="FridaInternalAgentPrivate" disguised="1"/>
	<class name="AgentContainer" c:type="FridaAgentContainer" c:symbol-prefix="agent_container" glib:type-name="FridaAgentContainer" glib:get-type="frida_agent_container_get_type" glib:type-struct="AgentContainerClass" parent="GObject.Object">
		<implements name="FridaBase.AgentSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AgentContainerPrivate" c:type="FridaAgentContainerPrivate*"/>
		</field>
		<function name="create" c:identifier="frida_agent_container_create">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="agent_filename" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="create_finish" c:identifier="frida_agent_container_create_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</function>
		<method name="destroy" c:identifier="frida_agent_container_destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_finish" c:identifier="frida_agent_container_destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_agent_container_new">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
			</return-value>
		</constructor>
		<property name="connection" writable="1">
			<type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
		</property>
		<method name="get_connection" c:identifier="frida_agent_container_get_connection">
			<return-value transfer-ownership="none">
				<type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentContainer" c:type="FridaAgentContainer*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AgentContainerClass" c:type="FridaAgentContainerClass" glib:is-gtype-struct-for="AgentContainer">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AgentContainerPrivate" c:type="FridaAgentContainerPrivate" disguised="1"/>
	<class name="ApplicationEnumerator" c:type="FridaApplicationEnumerator" c:symbol-prefix="application_enumerator" glib:type-name="FridaApplicationEnumerator" glib:get-type="frida_application_enumerator_get_type" glib:type-struct="ApplicationEnumeratorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ApplicationEnumeratorPrivate" c:type="FridaApplicationEnumeratorPrivate*"/>
		</field>
		<method name="enumerate_applications" c:identifier="frida_application_enumerator_enumerate_applications">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationEnumerator" c:type="FridaApplicationEnumerator*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="FridaBase.ApplicationQueryOptions" c:type="FridaApplicationQueryOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_applications_finish" c:identifier="frida_application_enumerator_enumerate_applications_finish">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostApplicationInfo*">
					<type name="FridaBase.HostApplicationInfo" c:type="FridaHostApplicationInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ApplicationEnumerator" c:type="FridaApplicationEnumerator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_application_enumerator_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ApplicationEnumerator" c:type="FridaApplicationEnumerator*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ApplicationEnumeratorClass" c:type="FridaApplicationEnumeratorClass" glib:is-gtype-struct-for="ApplicationEnumerator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ApplicationEnumeratorPrivate" c:type="FridaApplicationEnumeratorPrivate" disguised="1"/>
	<class name="ProcessEnumerator" c:type="FridaProcessEnumerator" c:symbol-prefix="process_enumerator" glib:type-name="FridaProcessEnumerator" glib:get-type="frida_process_enumerator_get_type" glib:type-struct="ProcessEnumeratorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="ProcessEnumeratorPrivate" c:type="FridaProcessEnumeratorPrivate*"/>
		</field>
		<method name="enumerate_processes" c:identifier="frida_process_enumerator_enumerate_processes">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessEnumerator" c:type="FridaProcessEnumerator*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="FridaBase.ProcessQueryOptions" c:type="FridaProcessQueryOptions*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enumerate_processes_finish" c:identifier="frida_process_enumerator_enumerate_processes_finish">
			<return-value transfer-ownership="full">
				<array length="1" c:type="FridaHostProcessInfo*">
					<type name="FridaBase.HostProcessInfo" c:type="FridaHostProcessInfo"/>
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.ProcessEnumerator" c:type="FridaProcessEnumerator*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_process_enumerator_new">
			<return-value transfer-ownership="full">
				<type name="Frida.ProcessEnumerator" c:type="FridaProcessEnumerator*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ProcessEnumeratorClass" c:type="FridaProcessEnumeratorClass" glib:is-gtype-struct-for="ProcessEnumerator">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="ProcessEnumeratorPrivate" c:type="FridaProcessEnumeratorPrivate" disguised="1"/>
	<class name="TemporaryDirectory" c:type="FridaTemporaryDirectory" c:symbol-prefix="temporary_directory" glib:type-name="FridaTemporaryDirectory" glib:get-type="frida_temporary_directory_get_type" glib:type-struct="TemporaryDirectoryClass" glib:fundamental="1" glib:ref-func="frida_temporary_directory_ref" glib:unref-func="frida_temporary_directory_unref" glib:set-value-func="frida_value_set_temporary_directory" glib:get-value-func="frida_value_get_temporary_directory">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TemporaryDirectoryPrivate" c:type="FridaTemporaryDirectoryPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_temporary_directory_new">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
		</constructor>
		<constructor name="with_file" c:identifier="frida_temporary_directory_new_with_file">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="is_ours" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<function name="always_use" c:identifier="frida_temporary_directory_always_use">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="use_sysroot" c:identifier="frida_temporary_directory_use_sysroot">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="root" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<method name="destroy" c:identifier="frida_temporary_directory_destroy">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="make_name" c:identifier="frida_temporary_directory_make_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</function>
		<method name="get_path" c:identifier="frida_temporary_directory_get_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_is_ours" c:identifier="frida_temporary_directory_get_is_ours">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</instance-parameter>
			</parameters>
		</method>
		<function name="get_system_default" c:identifier="frida_temporary_directory_get_system_default">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
		</function>
	</class>
	<record name="TemporaryDirectoryClass" c:type="FridaTemporaryDirectoryClass" glib:is-gtype-struct-for="TemporaryDirectory">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="TemporaryDirectoryPrivate" c:type="FridaTemporaryDirectoryPrivate" disguised="1"/>
	<class name="TemporaryFile" c:type="FridaTemporaryFile" c:symbol-prefix="temporary_file" glib:type-name="FridaTemporaryFile" glib:get-type="frida_temporary_file_get_type" glib:type-struct="TemporaryFileClass" glib:fundamental="1" glib:ref-func="frida_temporary_file_ref" glib:unref-func="frida_temporary_file_unref" glib:set-value-func="frida_value_set_temporary_file" glib:get-value-func="frida_value_get_temporary_file">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TemporaryFilePrivate" c:type="FridaTemporaryFilePrivate*"/>
		</field>
		<constructor name="from_stream" c:identifier="frida_temporary_file_new_from_stream" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="istream" transfer-ownership="none">
					<type name="Gio.InputStream" c:type="GInputStream*"/>
				</parameter>
				<parameter name="directory" transfer-ownership="none" nullable="1">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<constructor name="new" c:identifier="frida_temporary_file_new">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
				<parameter name="directory" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="destroy" c:identifier="frida_temporary_file_destroy">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_path" c:identifier="frida_temporary_file_get_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_parent" c:identifier="frida_temporary_file_get_parent">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="TemporaryFileClass" c:type="FridaTemporaryFileClass" glib:is-gtype-struct-for="TemporaryFile">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="TemporaryFilePrivate" c:type="FridaTemporaryFilePrivate" disguised="1"/>
	<class name="FileMonitor" c:type="FridaFileMonitor" c:symbol-prefix="file_monitor" glib:type-name="FridaFileMonitor" glib:get-type="frida_file_monitor_get_type" glib:type-struct="FileMonitorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FileMonitorPrivate" c:type="FridaFileMonitorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_file_monitor_new">
			<return-value transfer-ownership="full">
				<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="enable" c:identifier="frida_file_monitor_enable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_finish" c:identifier="frida_file_monitor_enable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="enable_sync" c:identifier="frida_file_monitor_enable_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable" c:identifier="frida_file_monitor_disable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_finish" c:identifier="frida_file_monitor_disable_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="disable_sync" c:identifier="frida_file_monitor_disable_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="path" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_path" c:identifier="frida_file_monitor_get_path">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.FileMonitor" c:type="FridaFileMonitor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="change">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="file_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="other_file_path" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="event" transfer-ownership="none">
					<type name="Gio.FileMonitorEvent" c:type="GFileMonitorEvent"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="FileMonitorClass" c:type="FridaFileMonitorClass" glib:is-gtype-struct-for="FileMonitor">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FileMonitorPrivate" c:type="FridaFileMonitorPrivate" disguised="1"/>
	<class name="LinuxHostSessionBackend" c:type="FridaLinuxHostSessionBackend" c:symbol-prefix="linux_host_session_backend" glib:type-name="FridaLinuxHostSessionBackend" glib:get-type="frida_linux_host_session_backend_get_type" glib:type-struct="LinuxHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHostSessionBackendPrivate" c:type="FridaLinuxHostSessionBackendPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_linux_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHostSessionBackend" c:type="FridaLinuxHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="LinuxHostSessionBackendClass" c:type="FridaLinuxHostSessionBackendClass" glib:is-gtype-struct-for="LinuxHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinuxHostSessionBackendPrivate" c:type="FridaLinuxHostSessionBackendPrivate" disguised="1"/>
	<class name="LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider" c:symbol-prefix="linux_host_session_provider" glib:type-name="FridaLinuxHostSessionProvider" glib:get-type="frida_linux_host_session_provider_get_type" glib:type-struct="LinuxHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHostSessionProviderPrivate" c:type="FridaLinuxHostSessionProviderPrivate*"/>
		</field>
		<method name="close" c:identifier="frida_linux_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_linux_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_linux_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHostSessionProvider" c:type="FridaLinuxHostSessionProvider*"/>
			</return-value>
		</constructor>
	</class>
	<record name="LinuxHostSessionProviderClass" c:type="FridaLinuxHostSessionProviderClass" glib:is-gtype-struct-for="LinuxHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinuxHostSessionProviderPrivate" c:type="FridaLinuxHostSessionProviderPrivate" disguised="1"/>
	<class name="LinuxHostSession" c:type="FridaLinuxHostSession" c:symbol-prefix="linux_host_session" glib:type-name="FridaLinuxHostSession" glib:get-type="frida_linux_host_session_get_type" glib:type-struct="LinuxHostSessionClass" parent="Frida.BaseDBusHostSession">
		<field name="parent_instance" readable="0" private="1">
			<type name="Frida.BaseDBusHostSession" c:type="FridaBaseDBusHostSession"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHostSessionPrivate" c:type="FridaLinuxHostSessionPrivate*"/>
		</field>
		<field name="system_server_agent" writable="1">
			<type name="Frida.SystemServerAgent" c:type="FridaSystemServerAgent*"/>
		</field>
		<constructor name="new" c:identifier="frida_linux_host_session_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
			</return-value>
			<parameters>
				<parameter name="helper" transfer-ownership="full">
					<type name="FridaBase.LinuxHelper" c:type="FridaLinuxHelper*"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="full">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
				<parameter name="report_crashes" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="helper" writable="1" construct-only="1">
			<type name="FridaBase.LinuxHelper" c:type="FridaLinuxHelper*"/>
		</property>
		<method name="get_helper" c:identifier="frida_linux_host_session_get_helper">
			<return-value transfer-ownership="none">
				<type name="FridaBase.LinuxHelper" c:type="FridaLinuxHelper*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_linux_host_session_get_tempdir">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="report-crashes" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_report_crashes" c:identifier="frida_linux_host_session_get_report_crashes">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHostSession" c:type="FridaLinuxHostSession*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LinuxHostSessionClass" c:type="FridaLinuxHostSessionClass" glib:is-gtype-struct-for="LinuxHostSession">
		<field name="parent_class" readable="0" private="1">
			<type name="Frida.BaseDBusHostSessionClass" c:type="FridaBaseDBusHostSessionClass"/>
		</field>
	</record>
	<record name="LinuxHostSessionPrivate" c:type="FridaLinuxHostSessionPrivate" disguised="1"/>
	<class name="Linjector" c:type="FridaLinjector" c:symbol-prefix="linjector" glib:type-name="FridaLinjector" glib:get-type="frida_linjector_get_type" glib:type-struct="LinjectorClass" parent="GObject.Object">
		<implements name="Frida.Injector"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinjectorPrivate" c:type="FridaLinjectorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_linjector_new">
			<return-value transfer-ownership="full">
				<type name="Frida.Linjector" c:type="FridaLinjector*"/>
			</return-value>
			<parameters>
				<parameter name="helper" transfer-ownership="none">
					<type name="FridaBase.LinuxHelper" c:type="FridaLinuxHelper*"/>
				</parameter>
				<parameter name="close_helper" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="inject_library_file_with_template" c:identifier="frida_linjector_inject_library_file_with_template">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path_template" transfer-ownership="none">
					<type name="FridaBase.PathTemplate" c:type="FridaPathTemplate*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="features" transfer-ownership="none">
					<type name="FridaBase.AgentFeatures" c:type="FridaAgentFeatures"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_with_template_finish" c:identifier="frida_linjector_inject_library_file_with_template_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_resource" c:identifier="frida_linjector_inject_library_resource">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="agent" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="features" transfer-ownership="none">
					<type name="FridaBase.AgentFeatures" c:type="FridaAgentFeatures"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_resource_finish" c:identifier="frida_linjector_inject_library_resource_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_fd" c:identifier="frida_linjector_inject_library_fd">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="library_so" transfer-ownership="none">
					<type name="GioUnix.UnixInputStream" c:type="GUnixInputStream*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="features" transfer-ownership="none">
					<type name="FridaBase.AgentFeatures" c:type="FridaAgentFeatures"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_fd_finish" c:identifier="frida_linjector_inject_library_fd_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_control_channel" c:identifier="frida_linjector_request_control_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_control_channel_finish" c:identifier="frida_linjector_request_control_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="any_still_injected" c:identifier="frida_linjector_any_still_injected">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="is_still_injected" c:identifier="frida_linjector_is_still_injected">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</method>
		<property name="helper" writable="1" construct-only="1">
			<type name="FridaBase.LinuxHelper" c:type="FridaLinuxHelper*"/>
		</property>
		<method name="get_helper" c:identifier="frida_linjector_get_helper">
			<return-value transfer-ownership="none">
				<type name="FridaBase.LinuxHelper" c:type="FridaLinuxHelper*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="close-helper" writable="1" construct-only="1">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_close_helper" c:identifier="frida_linjector_get_close_helper">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_linjector_get_tempdir">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Linjector" c:type="FridaLinjector*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LinjectorClass" c:type="FridaLinjectorClass" glib:is-gtype-struct-for="Linjector">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinjectorPrivate" c:type="FridaLinjectorPrivate" disguised="1"/>
	<class name="AgentDescriptor" c:type="FridaAgentDescriptor" c:symbol-prefix="agent_descriptor" glib:type-name="FridaAgentDescriptor" glib:get-type="frida_agent_descriptor_get_type" glib:type-struct="AgentDescriptorClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AgentDescriptorPrivate" c:type="FridaAgentDescriptorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_agent_descriptor_new">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
			</return-value>
			<parameters>
				<parameter name="name_template" transfer-ownership="none">
					<type name="FridaBase.PathTemplate" c:type="FridaPathTemplate*"/>
				</parameter>
				<parameter name="so32" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="so64" transfer-ownership="none" nullable="1">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="resources" transfer-ownership="none">
					<array length="4" c:type="FridaAgentResource**">
						<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
					</array>
				</parameter>
				<parameter name="resources_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="mode" transfer-ownership="none">
					<type name="Frida.AgentMode" c:type="FridaAgentMode"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="none" nullable="1">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_path_template" c:identifier="frida_agent_descriptor_get_path_template" throws="1">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="FridaBase.PathTemplate" c:type="FridaPathTemplate*"/>
				</parameter>
			</parameters>
		</method>
		<property name="name-template" writable="1" construct-only="1">
			<type name="FridaBase.PathTemplate" c:type="FridaPathTemplate"/>
		</property>
		<method name="get_name_template" c:identifier="frida_agent_descriptor_get_name_template">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
				<parameter name="result" direction="out" transfer-ownership="none" caller-allocates="1">
					<type name="FridaBase.PathTemplate" c:type="FridaPathTemplate*"/>
				</parameter>
			</parameters>
		</method>
		<property name="resources" writable="1" construct-only="1">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
			</type>
		</property>
		<method name="get_resources" c:identifier="frida_agent_descriptor_get_resources">
			<return-value transfer-ownership="none">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="mode" writable="1" construct-only="1">
			<type name="Frida.AgentMode" c:type="FridaAgentMode"/>
		</property>
		<method name="get_mode" c:identifier="frida_agent_descriptor_get_mode">
			<return-value transfer-ownership="none">
				<type name="Frida.AgentMode" c:type="FridaAgentMode"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_agent_descriptor_get_tempdir">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentDescriptor" c:type="FridaAgentDescriptor*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AgentDescriptorClass" c:type="FridaAgentDescriptorClass" glib:is-gtype-struct-for="AgentDescriptor">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AgentDescriptorPrivate" c:type="FridaAgentDescriptorPrivate" disguised="1"/>
	<class name="AgentResource" c:type="FridaAgentResource" c:symbol-prefix="agent_resource" glib:type-name="FridaAgentResource" glib:get-type="frida_agent_resource_get_type" glib:type-struct="AgentResourceClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AgentResourcePrivate" c:type="FridaAgentResourcePrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_agent_resource_new">
			<return-value transfer-ownership="full">
				<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="tempdir" transfer-ownership="none" nullable="1">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get_file" c:identifier="frida_agent_resource_get_file" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.TemporaryFile" c:type="FridaTemporaryFile*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_memfd" c:identifier="frida_agent_resource_get_memfd" throws="1">
			<return-value transfer-ownership="full">
				<type name="GioUnix.UnixInputStream" c:type="GUnixInputStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="name" writable="1" construct-only="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_agent_resource_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="blob" writable="1" construct-only="1">
			<type name="GLib.Bytes" c:type="GBytes*"/>
		</property>
		<method name="get_blob" c:identifier="frida_agent_resource_get_blob">
			<return-value transfer-ownership="none">
				<type name="GLib.Bytes" c:type="GBytes*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_agent_resource_get_tempdir">
			<return-value transfer-ownership="none" nullable="1">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.AgentResource" c:type="FridaAgentResource*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="AgentResourceClass" c:type="FridaAgentResourceClass" glib:is-gtype-struct-for="AgentResource">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AgentResourcePrivate" c:type="FridaAgentResourcePrivate" disguised="1"/>
	<class name="LinuxHelperProcess" c:type="FridaLinuxHelperProcess" c:symbol-prefix="linux_helper_process" glib:type-name="FridaLinuxHelperProcess" glib:get-type="frida_linux_helper_process_get_type" glib:type-struct="LinuxHelperProcessClass" parent="GObject.Object">
		<implements name="FridaBase.LinuxHelper"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="LinuxHelperProcessPrivate" c:type="FridaLinuxHelperProcessPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_linux_helper_process_new">
			<return-value transfer-ownership="full">
				<type name="Frida.LinuxHelperProcess" c:type="FridaLinuxHelperProcess*"/>
			</return-value>
			<parameters>
				<parameter name="tempdir" transfer-ownership="none">
					<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="tempdir" writable="1" construct-only="1">
			<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
		</property>
		<method name="get_tempdir" c:identifier="frida_linux_helper_process_get_tempdir">
			<return-value transfer-ownership="none">
				<type name="Frida.TemporaryDirectory" c:type="FridaTemporaryDirectory*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.LinuxHelperProcess" c:type="FridaLinuxHelperProcess*"/>
				</instance-parameter>
			</parameters>
		</method>
	</class>
	<record name="LinuxHelperProcessClass" c:type="FridaLinuxHelperProcessClass" glib:is-gtype-struct-for="LinuxHelperProcess">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="LinuxHelperProcessPrivate" c:type="FridaLinuxHelperProcessPrivate" disguised="1"/>
	<class name="SocketHostSessionBackend" c:type="FridaSocketHostSessionBackend" c:symbol-prefix="socket_host_session_backend" glib:type-name="FridaSocketHostSessionBackend" glib:get-type="frida_socket_host_session_backend_get_type" glib:type-struct="SocketHostSessionBackendClass" parent="GObject.Object">
		<implements name="Frida.HostSessionBackend"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SocketHostSessionBackendPrivate" c:type="FridaSocketHostSessionBackendPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_socket_host_session_backend_new">
			<return-value transfer-ownership="full">
				<type name="Frida.SocketHostSessionBackend" c:type="FridaSocketHostSessionBackend*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SocketHostSessionBackendClass" c:type="FridaSocketHostSessionBackendClass" glib:is-gtype-struct-for="SocketHostSessionBackend">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SocketHostSessionBackendPrivate" c:type="FridaSocketHostSessionBackendPrivate" disguised="1"/>
	<class name="SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider" c:symbol-prefix="socket_host_session_provider" glib:type-name="FridaSocketHostSessionProvider" glib:get-type="frida_socket_host_session_provider_get_type" glib:type-struct="SocketHostSessionProviderClass" parent="GObject.Object">
		<implements name="Frida.HostSessionProvider"/>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="SocketHostSessionProviderPrivate" c:type="FridaSocketHostSessionProviderPrivate*"/>
		</field>
		<method name="close" c:identifier="frida_socket_host_session_provider_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_socket_host_session_provider_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="frida_socket_host_session_provider_new">
			<return-value transfer-ownership="full">
				<type name="Frida.SocketHostSessionProvider" c:type="FridaSocketHostSessionProvider*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SocketHostSessionProviderClass" c:type="FridaSocketHostSessionProviderClass" glib:is-gtype-struct-for="SocketHostSessionProvider">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SocketHostSessionProviderPrivate" c:type="FridaSocketHostSessionProviderPrivate" disguised="1"/>
	<class name="Compiler" c:type="FridaCompiler" c:symbol-prefix="compiler" glib:type-name="FridaCompiler" glib:get-type="frida_compiler_get_type" glib:type-struct="CompilerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CompilerPrivate" c:type="FridaCompilerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_compiler_new">
			<return-value transfer-ownership="full">
				<type name="Frida.Compiler" c:type="FridaCompiler*"/>
			</return-value>
			<parameters>
				<parameter name="manager" transfer-ownership="none">
					<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="build" c:identifier="frida_compiler_build">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.BuildOptions" c:type="FridaBuildOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="build_finish" c:identifier="frida_compiler_build_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="build_sync" c:identifier="frida_compiler_build_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.BuildOptions" c:type="FridaBuildOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="watch" c:identifier="frida_compiler_watch">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.WatchOptions" c:type="FridaWatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="watch_finish" c:identifier="frida_compiler_watch_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="watch_sync" c:identifier="frida_compiler_watch_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.WatchOptions" c:type="FridaWatchOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<property name="manager" writable="1" construct-only="1">
			<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
		</property>
		<method name="get_manager" c:identifier="frida_compiler_get_manager">
			<return-value transfer-ownership="none">
				<type name="Frida.DeviceManager" c:type="FridaDeviceManager*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Compiler" c:type="FridaCompiler*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="starting">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="finished">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="output">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="bundle" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="diagnostics">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="diagnostics" transfer-ownership="none">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="CompilerClass" c:type="FridaCompilerClass" glib:is-gtype-struct-for="Compiler">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CompilerPrivate" c:type="FridaCompilerPrivate" disguised="1"/>
	<class name="CompilerOptions" c:type="FridaCompilerOptions" c:symbol-prefix="compiler_options" glib:type-name="FridaCompilerOptions" glib:get-type="frida_compiler_options_get_type" glib:type-struct="CompilerOptionsClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="CompilerOptionsPrivate" c:type="FridaCompilerOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_compiler_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
			</return-value>
		</constructor>
		<property name="project-root" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_project_root" c:identifier="frida_compiler_options_get_project_root">
			<return-value transfer-ownership="none" nullable="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_project_root" c:identifier="frida_compiler_options_set_project_root">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none" nullable="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="source-maps" writable="1">
			<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
		</property>
		<method name="get_source_maps" c:identifier="frida_compiler_options_get_source_maps">
			<return-value transfer-ownership="none">
				<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_source_maps" c:identifier="frida_compiler_options_set_source_maps">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.SourceMaps" c:type="FridaSourceMaps"/>
				</parameter>
			</parameters>
		</method>
		<property name="compression" writable="1">
			<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
		</property>
		<method name="get_compression" c:identifier="frida_compiler_options_get_compression">
			<return-value transfer-ownership="none">
				<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_compression" c:identifier="frida_compiler_options_set_compression">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="Frida.JsCompression" c:type="FridaJsCompression"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="CompilerOptionsClass" c:type="FridaCompilerOptionsClass" glib:is-gtype-struct-for="CompilerOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="CompilerOptionsPrivate" c:type="FridaCompilerOptionsPrivate" disguised="1"/>
	<class name="BuildOptions" c:type="FridaBuildOptions" c:symbol-prefix="build_options" glib:type-name="FridaBuildOptions" glib:get-type="frida_build_options_get_type" glib:type-struct="BuildOptionsClass" parent="Frida.CompilerOptions">
		<field name="parent_instance" readable="0" private="1">
			<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BuildOptionsPrivate" c:type="FridaBuildOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_build_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.BuildOptions" c:type="FridaBuildOptions*"/>
			</return-value>
		</constructor>
	</class>
	<record name="BuildOptionsClass" c:type="FridaBuildOptionsClass" glib:is-gtype-struct-for="BuildOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="Frida.CompilerOptionsClass" c:type="FridaCompilerOptionsClass"/>
		</field>
	</record>
	<record name="BuildOptionsPrivate" c:type="FridaBuildOptionsPrivate" disguised="1"/>
	<class name="WatchOptions" c:type="FridaWatchOptions" c:symbol-prefix="watch_options" glib:type-name="FridaWatchOptions" glib:get-type="frida_watch_options_get_type" glib:type-struct="WatchOptionsClass" parent="Frida.CompilerOptions">
		<field name="parent_instance" readable="0" private="1">
			<type name="Frida.CompilerOptions" c:type="FridaCompilerOptions"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="WatchOptionsPrivate" c:type="FridaWatchOptionsPrivate*"/>
		</field>
		<constructor name="new" c:identifier="frida_watch_options_new">
			<return-value transfer-ownership="full">
				<type name="Frida.WatchOptions" c:type="FridaWatchOptions*"/>
			</return-value>
		</constructor>
	</class>
	<record name="WatchOptionsClass" c:type="FridaWatchOptionsClass" glib:is-gtype-struct-for="WatchOptions">
		<field name="parent_class" readable="0" private="1">
			<type name="Frida.CompilerOptionsClass" c:type="FridaCompilerOptionsClass"/>
		</field>
	</record>
	<record name="WatchOptionsPrivate" c:type="FridaWatchOptionsPrivate" disguised="1"/>
	<interface name="Service" c:type="FridaService" c:symbol-prefix="service" glib:type-name="FridaService" glib:get-type="frida_service_get_type" glib:type-struct="ServiceIface">
		<prerequisite name="GObject.Object"/>
		<method name="is_closed" c:identifier="frida_service_is_closed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="is_closed" invoker="is_closed">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="activate" c:identifier="frida_service_activate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="activate_finish" c:identifier="frida_service_activate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="activate" invoker="activate">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="activate_finish" invoker="activate_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="activate_sync" c:identifier="frida_service_activate_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="cancel" c:identifier="frida_service_cancel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="cancel_finish" c:identifier="frida_service_cancel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="cancel" invoker="cancel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="cancel_finish" invoker="cancel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="cancel_sync" c:identifier="frida_service_cancel_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request" c:identifier="frida_service_request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="parameters" transfer-ownership="none">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="request_finish" c:identifier="frida_service_request_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="request" invoker="request">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="parameters" transfer-ownership="none">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="request_finish" invoker="request_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="request_sync" c:identifier="frida_service_request_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Service" c:type="FridaService*"/>
				</instance-parameter>
				<parameter name="parameters" transfer-ownership="none">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="close">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
		<glib:signal name="message">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="message" transfer-ownership="none">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="ServiceIface" c:type="FridaServiceIface" glib:is-gtype-struct-for="Service">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="is_closed">
			<callback name="is_closed" c:type="is_closed">
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="activate">
			<callback name="activate" c:type="activate">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="activate_finish">
			<callback name="activate_finish" c:type="activate_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="cancel">
			<callback name="cancel" c:type="cancel">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="cancel_finish">
			<callback name="cancel_finish" c:type="cancel_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="request">
			<callback name="request" c:type="request">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
					<parameter name="parameters" transfer-ownership="none">
						<type name="GLib.Variant" c:type="GVariant*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="request_finish">
			<callback name="request_finish" c:type="request_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Service" c:type="FridaService*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Injector" c:type="FridaInjector" c:symbol-prefix="injector" glib:type-name="FridaInjector" glib:get-type="frida_injector_get_type" glib:type-struct="InjectorIface">
		<prerequisite name="GObject.Object"/>
		<function name="new" c:identifier="frida_injector_new">
			<return-value transfer-ownership="full">
				<type name="Frida.Injector" c:type="FridaInjector*"/>
			</return-value>
		</function>
		<function name="new_inprocess" c:identifier="frida_injector_new_inprocess">
			<return-value transfer-ownership="full">
				<type name="Frida.Injector" c:type="FridaInjector*"/>
			</return-value>
		</function>
		<method name="close" c:identifier="frida_injector_close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="close_finish" c:identifier="frida_injector_close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="close" invoker="close">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="close_finish" invoker="close_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="close_sync" c:identifier="frida_injector_close_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file" c:identifier="frida_injector_inject_library_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_file_finish" c:identifier="frida_injector_inject_library_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="inject_library_file" invoker="inject_library_file">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="inject_library_file_finish" invoker="inject_library_file_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="inject_library_file_sync" c:identifier="frida_injector_inject_library_file_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob" c:identifier="frida_injector_inject_library_blob">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="inject_library_blob_finish" c:identifier="frida_injector_inject_library_blob_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="inject_library_blob" invoker="inject_library_blob">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="inject_library_blob_finish" invoker="inject_library_blob_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="inject_library_blob_sync" c:identifier="frida_injector_inject_library_blob_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="blob" transfer-ownership="none">
					<type name="GLib.Bytes" c:type="GBytes*"/>
				</parameter>
				<parameter name="entrypoint" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor" c:identifier="frida_injector_demonitor">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor_finish" c:identifier="frida_injector_demonitor_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="demonitor" invoker="demonitor">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="demonitor_finish" invoker="demonitor_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="demonitor_sync" c:identifier="frida_injector_demonitor_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor_and_clone_state" c:identifier="frida_injector_demonitor_and_clone_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="demonitor_and_clone_state_finish" c:identifier="frida_injector_demonitor_and_clone_state_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="demonitor_and_clone_state" invoker="demonitor_and_clone_state">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="demonitor_and_clone_state_finish" invoker="demonitor_and_clone_state_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="demonitor_and_clone_state_sync" c:identifier="frida_injector_demonitor_and_clone_state_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="guint" c:type="guint"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<method name="recreate_thread" c:identifier="frida_injector_recreate_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="recreate_thread_finish" c:identifier="frida_injector_recreate_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="recreate_thread" invoker="recreate_thread">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="recreate_thread_finish" invoker="recreate_thread_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="recreate_thread_sync" c:identifier="frida_injector_recreate_thread_sync" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Injector" c:type="FridaInjector*"/>
				</instance-parameter>
				<parameter name="pid" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="uninjected">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="InjectorIface" c:type="FridaInjectorIface" glib:is-gtype-struct-for="Injector">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="close">
			<callback name="close" c:type="close">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="close_finish">
			<callback name="close_finish" c:type="close_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_file">
			<callback name="inject_library_file" c:type="inject_library_file">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="path" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="entrypoint" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_file_finish">
			<callback name="inject_library_file_finish" c:type="inject_library_file_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_blob">
			<callback name="inject_library_blob" c:type="inject_library_blob">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="blob" transfer-ownership="none">
						<type name="GLib.Bytes" c:type="GBytes*"/>
					</parameter>
					<parameter name="entrypoint" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="data" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="7" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="inject_library_blob_finish">
			<callback name="inject_library_blob_finish" c:type="inject_library_blob_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor">
			<callback name="demonitor" c:type="demonitor">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor_finish">
			<callback name="demonitor_finish" c:type="demonitor_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor_and_clone_state">
			<callback name="demonitor_and_clone_state" c:type="demonitor_and_clone_state">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="demonitor_and_clone_state_finish">
			<callback name="demonitor_and_clone_state_finish" c:type="demonitor_and_clone_state_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="guint" c:type="guint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="recreate_thread">
			<callback name="recreate_thread" c:type="recreate_thread">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="pid" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="guint" c:type="guint"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="recreate_thread_finish">
			<callback name="recreate_thread_finish" c:type="recreate_thread_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Injector" c:type="FridaInjector*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HostSessionProvider" c:type="FridaHostSessionProvider" c:symbol-prefix="host_session_provider" glib:type-name="FridaHostSessionProvider" glib:get-type="frida_host_session_provider_get_type" glib:type-struct="HostSessionProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="create" c:identifier="frida_host_session_provider_create">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="create_finish" c:identifier="frida_host_session_provider_create_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="create" invoker="create">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="options" transfer-ownership="none" nullable="1">
					<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="create_finish" invoker="create_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="destroy" c:identifier="frida_host_session_provider_destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="session" transfer-ownership="none">
					<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="destroy_finish" c:identifier="frida_host_session_provider_destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="destroy" invoker="destroy">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="session" transfer-ownership="none">
					<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="destroy_finish" invoker="destroy_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="link_agent_session" c:identifier="frida_host_session_provider_link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="host_session" transfer-ownership="none">
					<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="FridaBase.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="link_agent_session_finish" c:identifier="frida_host_session_provider_link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="link_agent_session" invoker="link_agent_session">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="host_session" transfer-ownership="none">
					<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
				</parameter>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
				<parameter name="sink" transfer-ownership="none">
					<type name="FridaBase.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="5" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="link_agent_session_finish" invoker="link_agent_session_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="FridaBase.AgentSession" c:type="FridaAgentSession*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="id">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_id" c:identifier="frida_host_session_provider_get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_id" invoker="get_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="frida_host_session_provider_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="icon">
			<type name="GLib.Variant" c:type="GVariant*"/>
		</property>
		<method name="get_icon" c:identifier="frida_host_session_provider_get_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_icon" invoker="get_icon">
			<return-value transfer-ownership="none" nullable="1">
				<type name="GLib.Variant" c:type="GVariant*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<property name="kind">
			<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
		</property>
		<method name="get_kind" c:identifier="frida_host_session_provider_get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_kind" invoker="get_kind">
			<return-value transfer-ownership="none">
				<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="host-session-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="session" transfer-ownership="none">
					<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="agent-session-detached">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="id" transfer-ownership="none">
					<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
				</parameter>
				<parameter name="reason" transfer-ownership="none">
					<type name="FridaBase.SessionDetachReason" c:type="FridaSessionDetachReason"/>
				</parameter>
				<parameter name="crash" transfer-ownership="none">
					<type name="FridaBase.CrashInfo" c:type="FridaCrashInfo*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="HostSessionProviderIface" c:type="FridaHostSessionProviderIface" glib:is-gtype-struct-for="HostSessionProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="create">
			<callback name="create" c:type="create">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="options" transfer-ownership="none" nullable="1">
						<type name="Frida.HostSessionOptions" c:type="FridaHostSessionOptions*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="create_finish">
			<callback name="create_finish" c:type="create_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy">
			<callback name="destroy" c:type="destroy">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="session" transfer-ownership="none">
						<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="destroy_finish">
			<callback name="destroy_finish" c:type="destroy_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="link_agent_session">
			<callback name="link_agent_session" c:type="link_agent_session">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="host_session" transfer-ownership="none">
						<type name="FridaBase.HostSession" c:type="FridaHostSession*"/>
					</parameter>
					<parameter name="id" transfer-ownership="none">
						<type name="FridaBase.AgentSessionId" c:type="FridaAgentSessionId*"/>
					</parameter>
					<parameter name="sink" transfer-ownership="none">
						<type name="FridaBase.AgentMessageSink" c:type="FridaAgentMessageSink*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="6" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="link_agent_session_finish">
			<callback name="link_agent_session_finish" c:type="link_agent_session_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="FridaBase.AgentSession" c:type="FridaAgentSession*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_id">
			<callback name="get_id" c:type="get_id">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_icon">
			<callback name="get_icon" c:type="get_icon">
				<return-value transfer-ownership="none" nullable="1">
					<type name="GLib.Variant" c:type="GVariant*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_kind">
			<callback name="get_kind" c:type="get_kind">
				<return-value transfer-ownership="none">
					<type name="Frida.HostSessionProviderKind" c:type="FridaHostSessionProviderKind"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HostChannelProvider" c:type="FridaHostChannelProvider" c:symbol-prefix="host_channel_provider" glib:type-name="FridaHostChannelProvider" glib:get-type="frida_host_channel_provider_get_type" glib:type-struct="HostChannelProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="open_channel" c:identifier="frida_host_channel_provider_open_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostChannelProvider" c:type="FridaHostChannelProvider*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_channel_finish" c:identifier="frida_host_channel_provider_open_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostChannelProvider" c:type="FridaHostChannelProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="open_channel" invoker="open_channel">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostChannelProvider" c:type="FridaHostChannelProvider*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="open_channel_finish" invoker="open_channel_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Gio.IOStream" c:type="GIOStream*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostChannelProvider" c:type="FridaHostChannelProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="HostChannelProviderIface" c:type="FridaHostChannelProviderIface" glib:is-gtype-struct-for="HostChannelProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="open_channel">
			<callback name="open_channel" c:type="open_channel">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostChannelProvider" c:type="FridaHostChannelProvider*"/>
					</parameter>
					<parameter name="address" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="open_channel_finish">
			<callback name="open_channel_finish" c:type="open_channel_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Gio.IOStream" c:type="GIOStream*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostChannelProvider" c:type="FridaHostChannelProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HostServiceProvider" c:type="FridaHostServiceProvider" c:symbol-prefix="host_service_provider" glib:type-name="FridaHostServiceProvider" glib:get-type="frida_host_service_provider_get_type" glib:type-struct="HostServiceProviderIface">
		<prerequisite name="GObject.Object"/>
		<method name="open_service" c:identifier="frida_host_service_provider_open_service">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostServiceProvider" c:type="FridaHostServiceProvider*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open_service_finish" c:identifier="frida_host_service_provider_open_service_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Service" c:type="FridaService*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostServiceProvider" c:type="FridaHostServiceProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="open_service" invoker="open_service">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostServiceProvider" c:type="FridaHostServiceProvider*"/>
				</instance-parameter>
				<parameter name="address" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="open_service_finish" invoker="open_service_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="Frida.Service" c:type="FridaService*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostServiceProvider" c:type="FridaHostServiceProvider*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="HostServiceProviderIface" c:type="FridaHostServiceProviderIface" glib:is-gtype-struct-for="HostServiceProvider">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="open_service">
			<callback name="open_service" c:type="open_service">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostServiceProvider" c:type="FridaHostServiceProvider*"/>
					</parameter>
					<parameter name="address" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="4" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="open_service_finish">
			<callback name="open_service_finish" c:type="open_service_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="Frida.Service" c:type="FridaService*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostServiceProvider" c:type="FridaHostServiceProvider*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="Pairable" c:type="FridaPairable" c:symbol-prefix="pairable" glib:type-name="FridaPairable" glib:get-type="frida_pairable_get_type" glib:type-struct="PairableIface">
		<prerequisite name="GObject.Object"/>
		<method name="unpair" c:identifier="frida_pairable_unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="unpair_finish" c:identifier="frida_pairable_unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="unpair" invoker="unpair">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="unpair_finish" invoker="unpair_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.Pairable" c:type="FridaPairable*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="PairableIface" c:type="FridaPairableIface" glib:is-gtype-struct-for="Pairable">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="unpair">
			<callback name="unpair" c:type="unpair">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Pairable" c:type="FridaPairable*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="unpair_finish">
			<callback name="unpair_finish" c:type="unpair_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.Pairable" c:type="FridaPairable*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="HostSessionBackend" c:type="FridaHostSessionBackend" c:symbol-prefix="host_session_backend" glib:type-name="FridaHostSessionBackend" glib:get-type="frida_host_session_backend_get_type" glib:type-struct="HostSessionBackendIface">
		<prerequisite name="GObject.Object"/>
		<method name="start" c:identifier="frida_host_session_backend_start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="start_finish" c:identifier="frida_host_session_backend_start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="start" invoker="start">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="start_finish" invoker="start_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="stop" c:identifier="frida_host_session_backend_stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="stop_finish" c:identifier="frida_host_session_backend_stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="stop" invoker="stop">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="cancellable" transfer-ownership="none" nullable="1">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="stop_finish" invoker="stop_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="provider-available">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="provider-unavailable">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="provider" transfer-ownership="none">
					<type name="Frida.HostSessionProvider" c:type="FridaHostSessionProvider*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</interface>
	<record name="HostSessionBackendIface" c:type="FridaHostSessionBackendIface" glib:is-gtype-struct-for="HostSessionBackend">
		<field name="parent_iface" readable="0" private="1">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="start">
			<callback name="start" c:type="start">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="start_finish">
			<callback name="start_finish" c:type="start_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="stop">
			<callback name="stop" c:type="stop">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="cancellable" transfer-ownership="none" nullable="1">
						<type name="Gio.Cancellable" c:type="GCancellable*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="stop_finish">
			<callback name="stop_finish" c:type="stop_finish" throws="1">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Frida.HostSessionBackend" c:type="FridaHostSessionBackend*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<function name="init" c:identifier="frida_init">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
	<function name="init_with_runtime" c:identifier="frida_init_with_runtime">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="runtime" transfer-ownership="none">
				<type name="Frida.Runtime" c:type="FridaRuntime"/>
			</parameter>
		</parameters>
	</function>
	<function name="shutdown" c:identifier="frida_shutdown">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
	<function name="deinit" c:identifier="frida_deinit">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
	</function>
	<function name="get_main_context" c:identifier="frida_get_main_context">
		<return-value transfer-ownership="none">
			<type name="GLib.MainContext" c:type="GMainContext*"/>
		</return-value>
	</function>
	<function name="unref" c:identifier="frida_unref">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="obj" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="version" c:identifier="frida_version">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="major" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
			<parameter name="minor" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
			<parameter name="micro" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
			<parameter name="nano" direction="out" transfer-ownership="full">
				<type name="guint" c:type="guint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="version_string" c:identifier="frida_version_string">
		<return-value transfer-ownership="none">
			<type name="utf8" c:type="const gchar*"/>
		</return-value>
	</function>
	<function name="on_pending_garbage" c:identifier="frida_on_pending_garbage">
		<return-value transfer-ownership="full">
			<type name="none" c:type="void"/>
		</return-value>
		<parameters>
			<parameter name="data" transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
</namespace>
</repository>
